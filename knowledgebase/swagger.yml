openapi: 3.0.0
info:
  title: Knowledgebase API
  version: 1.0.0
paths:
  /api/query:
    get:
      operationId: query_query
      parameters: []
      responses:
        '200':
          description: >-
            Exposes the root query type nested one level down. This is helpful
            for Relay 1

            which can only query top level fields if they are in a particular
            form.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
  /api/node-id:
    get:
      operationId: nodeId_query
      parameters: []
      responses:
        '200':
          description: >-
            The root query type must be a `Node` to work well with Relay 1
            mutations. This just resolves to `query`.
          content:
            application/json:
              schema:
                type: string
  /api/node:
    get:
      operationId: node_query
      parameters:
        - in: query
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Fetches an object given its globally unique `ID`.
          content:
            application/json:
              schema:
                type: object
  /api/all-activity-streams:
    get:
      operationId: allActivityStreams_query
      parameters:
        - in: query
          name: first
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: last
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: before
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: after
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: orderBy
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ActivityStreamsOrderBy'
        - in: query
          name: condition
          required: false
          schema:
            $ref: '#/components/schemas/ActivityStreamCondition'
      responses:
        '200':
          description: Reads and enables pagination through a set of `ActivityStream`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityStreamsConnection'
  /api/all-knowledge-base-article-delayed-jobs:
    get:
      operationId: allKnowledgeBaseArticleDelayedJobs_query
      parameters:
        - in: query
          name: first
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: last
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: before
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: after
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: orderBy
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJobsOrderBy'
        - in: query
          name: condition
          required: false
          schema:
            $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJobCondition'
      responses:
        '200':
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseArticleDelayedJob`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJobsConnection'
  /api/all-knowledge-base-article-translations:
    get:
      operationId: allKnowledgeBaseArticleTranslations_query
      parameters:
        - in: query
          name: first
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: last
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: before
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: after
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: orderBy
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/KnowledgeBaseArticleTranslationsOrderBy'
        - in: query
          name: condition
          required: false
          schema:
            $ref: '#/components/schemas/KnowledgeBaseArticleTranslationCondition'
      responses:
        '200':
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseArticleTranslation`.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/KnowledgeBaseArticleTranslationsConnection
  /api/all-knowledge-base-articles:
    get:
      operationId: allKnowledgeBaseArticles_query
      parameters:
        - in: query
          name: first
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: last
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: before
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: after
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: orderBy
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/KnowledgeBaseArticlesOrderBy'
        - in: query
          name: condition
          required: false
          schema:
            $ref: '#/components/schemas/KnowledgeBaseArticleCondition'
      responses:
        '200':
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseArticle`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseArticlesConnection'
  /api/all-knowledge-base-categories:
    get:
      operationId: allKnowledgeBaseCategories_query
      parameters:
        - in: query
          name: first
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: last
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: before
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: after
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: orderBy
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/KnowledgeBaseCategoriesOrderBy'
        - in: query
          name: condition
          required: false
          schema:
            $ref: '#/components/schemas/KnowledgeBaseCategoryCondition'
      responses:
        '200':
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseCategory`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseCategoriesConnection'
  /api/all-knowledge-base-category-delayed-jobs:
    get:
      operationId: allKnowledgeBaseCategoryDelayedJobs_query
      parameters:
        - in: query
          name: first
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: last
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: before
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: after
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: orderBy
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJobsOrderBy'
        - in: query
          name: condition
          required: false
          schema:
            $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJobCondition'
      responses:
        '200':
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseCategoryDelayedJob`.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/KnowledgeBaseCategoryDelayedJobsConnection
  /api/all-knowledge-base-category-translations:
    get:
      operationId: allKnowledgeBaseCategoryTranslations_query
      parameters:
        - in: query
          name: first
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: last
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: before
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: after
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: orderBy
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/KnowledgeBaseCategoryTranslationsOrderBy'
        - in: query
          name: condition
          required: false
          schema:
            $ref: '#/components/schemas/KnowledgeBaseCategoryTranslationCondition'
      responses:
        '200':
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseCategoryTranslation`.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/KnowledgeBaseCategoryTranslationsConnection
  /api/all-knowledge-base-lists:
    get:
      operationId: allKnowledgeBaseLists_query
      parameters:
        - in: query
          name: first
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: last
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: before
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: after
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: orderBy
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/KnowledgeBaseListsOrderBy'
        - in: query
          name: condition
          required: false
          schema:
            $ref: '#/components/schemas/KnowledgeBaseListCondition'
      responses:
        '200':
          description: Reads and enables pagination through a set of `KnowledgeBaseList`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseListsConnection'
  /api/all-knowledge-base-translations:
    get:
      operationId: allKnowledgeBaseTranslations_query
      parameters:
        - in: query
          name: first
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: last
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: before
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: after
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: orderBy
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/KnowledgeBaseTranslationsOrderBy'
        - in: query
          name: condition
          required: false
          schema:
            $ref: '#/components/schemas/KnowledgeBaseTranslationCondition'
      responses:
        '200':
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseTranslation`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseTranslationsConnection'
  /api/all-knowledge-bases:
    get:
      operationId: allKnowledgeBases_query
      parameters:
        - in: query
          name: first
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: last
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: before
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: after
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: orderBy
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/KnowledgeBasesOrderBy'
        - in: query
          name: condition
          required: false
          schema:
            $ref: '#/components/schemas/KnowledgeBasisCondition'
      responses:
        '200':
          description: Reads and enables pagination through a set of `KnowledgeBasis`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasesConnection'
  /api/all-locales:
    get:
      operationId: allLocales_query
      parameters:
        - in: query
          name: first
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: last
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: before
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: after
          required: false
          schema:
            $ref: '#/components/schemas/Cursor'
        - in: query
          name: orderBy
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LocalesOrderBy'
        - in: query
          name: condition
          required: false
          schema:
            $ref: '#/components/schemas/LocaleCondition'
      responses:
        '200':
          description: Reads and enables pagination through a set of `Locale`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalesConnection'
  /api/activity-stream-by-id/{id}:
    get:
      operationId: activityStreamById_query
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityStream'
  /api/knowledge-base-article-delayed-job-by-id/{id}:
    get:
      operationId: knowledgeBaseArticleDelayedJobById_query
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJob'
  /api/knowledge-base-article-translation-by-id/{id}:
    get:
      operationId: knowledgeBaseArticleTranslationById_query
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseArticleTranslation'
  /api/knowledge-base-article-by-id/{id}:
    get:
      operationId: knowledgeBaseArticleById_query
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseArticle'
  /api/knowledge-base-category-by-id/{id}:
    get:
      operationId: knowledgeBaseCategoryById_query
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseCategory'
  /api/knowledge-base-category-delayed-job-by-id/{id}:
    get:
      operationId: knowledgeBaseCategoryDelayedJobById_query
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJob'
  /api/knowledge-base-category-translation-by-id/{id}:
    get:
      operationId: knowledgeBaseCategoryTranslationById_query
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseCategoryTranslation'
  /api/knowledge-base-list-by-id/{id}:
    get:
      operationId: knowledgeBaseListById_query
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseList'
  /api/knowledge-base-translation-by-id/{id}:
    get:
      operationId: knowledgeBaseTranslationById_query
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseTranslation'
  /api/knowledge-basis-by-id/{id}:
    get:
      operationId: knowledgeBasisById_query
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasis'
  /api/locale-by-id/{id}:
    get:
      operationId: localeById_query
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locale'
  /api/activity-stream:
    get:
      operationId: activityStream_query
      parameters:
        - in: query
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reads a single `ActivityStream` using its globally unique `ID`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityStream'
  /api/knowledge-base-article-delayed-job:
    get:
      operationId: knowledgeBaseArticleDelayedJob_query
      parameters:
        - in: query
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Reads a single `KnowledgeBaseArticleDelayedJob` using its globally
            unique `ID`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJob'
  /api/knowledge-base-article-translation:
    get:
      operationId: knowledgeBaseArticleTranslation_query
      parameters:
        - in: query
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Reads a single `KnowledgeBaseArticleTranslation` using its globally
            unique `ID`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseArticleTranslation'
  /api/knowledge-base-article:
    get:
      operationId: knowledgeBaseArticle_query
      parameters:
        - in: query
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Reads a single `KnowledgeBaseArticle` using its globally unique
            `ID`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseArticle'
  /api/knowledge-base-category:
    get:
      operationId: knowledgeBaseCategory_query
      parameters:
        - in: query
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Reads a single `KnowledgeBaseCategory` using its globally unique
            `ID`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseCategory'
  /api/knowledge-base-category-delayed-job:
    get:
      operationId: knowledgeBaseCategoryDelayedJob_query
      parameters:
        - in: query
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Reads a single `KnowledgeBaseCategoryDelayedJob` using its globally
            unique `ID`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJob'
  /api/knowledge-base-category-translation:
    get:
      operationId: knowledgeBaseCategoryTranslation_query
      parameters:
        - in: query
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Reads a single `KnowledgeBaseCategoryTranslation` using its globally
            unique `ID`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseCategoryTranslation'
  /api/knowledge-base-list:
    get:
      operationId: knowledgeBaseList_query
      parameters:
        - in: query
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reads a single `KnowledgeBaseList` using its globally unique `ID`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseList'
  /api/knowledge-base-translation:
    get:
      operationId: knowledgeBaseTranslation_query
      parameters:
        - in: query
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Reads a single `KnowledgeBaseTranslation` using its globally unique
            `ID`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseTranslation'
  /api/knowledge-basis:
    get:
      operationId: knowledgeBasis_query
      parameters:
        - in: query
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reads a single `KnowledgeBasis` using its globally unique `ID`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasis'
  /api/locale:
    get:
      operationId: locale_query
      parameters:
        - in: query
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reads a single `Locale` using its globally unique `ID`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locale'
  /api/ping:
    get:
      operationId: ping_query
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/knowledgebases:
    get:
      operationId: knowledgebases__query
      parameters: []
      responses:
        '200':
          description: Get all knowledgebases
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBaseHybridStatType'
  /api/knowledgebase:
    get:
      operationId: knowledgebase__query
      parameters:
        - in: query
          name: knowledge_base_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get a single knowledgebase by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Knowledgebase'
  /api/knowledgebase-translations:
    get:
      operationId: knowledgebaseTranslations__query
      parameters:
        - in: query
          name: knowledge_base_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get all knowledgebase translations for a given knowledge base
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgebaseTranslationType'
  /api/get-knowledge-base-language-selection-list:
    get:
      operationId: getKnowledgeBaseLanguageSelectionList__query
      parameters:
        - in: query
          name: knowledge_base_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get all knowledgebase language selection for a given knowledgebase
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBaseLocales'
  /api/get-locales:
    get:
      operationId: getLocales__query
      parameters: []
      responses:
        '200':
          description: Get all knowledgebase locales
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBaseLocales'
  /api/knowledgebase-translation-status-color:
    get:
      operationId: knowledgebaseTranslationStatusColor__query
      parameters:
        - in: query
          name: filter_by
          required: true
          schema:
            type: string
        - in: query
          name: knowledge_base_id
          required: true
          schema:
            type: string
        - in: query
          name: category_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Get the status color for the knowledgebase translations at the
            category specified
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgebaseTranslationStatusColor'
  /api/get-schedule-for-knowledgebase-category-translation:
    get:
      operationId: getScheduleForKnowledgebaseCategoryTranslation__query
      parameters:
        - in: query
          name: knowledge_base_category_translation_id
          required: true
          schema:
            type: string
        - in: query
          name: operation
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Get a knowledgebase translation that is scheduled for publication,
            deletion or update
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/StatusMessageForKnowledgeBaseCategoryScheduleType
  /api/get-knowledgebase-categories:
    get:
      operationId: getKnowledgebaseCategories__query
      parameters:
        - in: query
          name: knowledge_base_id
          required: true
          schema:
            type: string
        - in: query
          name: kb_locale_id
          required: true
          schema:
            type: string
        - in: query
          name: level
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: parent_id
          required: false
          schema:
            type: string
      responses:
        '200':
          description: >-
            Get all knowledgebase category translations in a knowledge base for
            a specified locale and level
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBaseCategoryHybridStatType'
  /api/get-knowledge-base-category-translation:
    get:
      operationId: getKnowledgeBaseCategoryTranslation__query
      parameters:
        - in: query
          name: category_id
          required: true
          schema:
            type: string
        - in: query
          name: kb_locale_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Get a knowledgebase category translations in a knowledge base for a
            specified locale
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseCategoryHybridStatType'
  /api/get-knowledge-base-category:
    get:
      operationId: getKnowledgeBaseCategory__query
      parameters:
        - in: query
          name: category_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get a knowledgebase category by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseCategoryType'
  /api/get-knowledge-base-articles:
    get:
      operationId: getKnowledgeBaseArticles__query
      parameters:
        - in: query
          name: knowledge_base_id
          required: true
          schema:
            type: string
        - in: query
          name: category_id
          required: true
          schema:
            type: string
        - in: query
          name: kb_locale_id
          required: true
          schema:
            type: string
        - in: query
          name: parent_id
          required: false
          schema:
            type: string
        - in: query
          name: level
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: >-
            Get all knowledgebase category articles in for a locale at a given
            level
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBaseArticleType'
  /api/get-knowledge-base-article-translation:
    get:
      operationId: getKnowledgeBaseArticleTranslation__query
      parameters:
        - in: query
          name: article_id
          required: true
          schema:
            type: string
        - in: query
          name: kb_locale_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a knowledge base article translation for a given locale
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseArticleType'
  /api/get-schedule-for-knowledge-base-article:
    get:
      operationId: getScheduleForKnowledgeBaseArticle__query
      parameters:
        - in: query
          name: knowledge_base_article_translation_id
          required: true
          schema:
            type: string
        - in: query
          name: schedule_type
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Returns details about a scheduled knowledgebase article for deletion
            or update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJobType'
  /api/get-knowledge-base-list:
    get:
      operationId: getKnowledgeBaseList__query
      parameters:
        - in: query
          name: knowledge_base_id
          required: true
          schema:
            type: string
        - in: query
          name: list_type
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the list for the knowledgebase specified
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBaseListType'
  /api/get-level-status:
    get:
      operationId: getLevelStatus__query
      parameters:
        - in: query
          name: knowledge_base_id
          required: true
          schema:
            type: string
        - in: query
          name: kb_locale_id
          required: true
          schema:
            type: string
        - in: query
          name: level
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Returns the status of a level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseLevelStatusHybridType'
  /api/get-knowledge-base-category-level:
    get:
      operationId: getKnowledgeBaseCategoryLevel__query
      parameters:
        - in: query
          name: knowledge_base_id
          required: true
          schema:
            type: string
        - in: query
          name: category_id
          required: true
          schema:
            type: string
        - in: query
          name: kb_locale_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the level and depth of a knowledge base category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseCategoryLevelType'
  /api/export-knowledgebase:
    get:
      operationId: exportKnowledgebase__query
      parameters:
        - in: query
          name: knowledge_base_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Creates an export file for a knowledgebase
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportKnowledgeBaseType'
  /api/create-activity-stream:
    post:
      operationId: createActivityStream_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/CreateActivityStreamInput'
                createActivityStream_activityStreamEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/ActivityStreamsOrderBy'
              required:
                - input
      responses:
        '200':
          description: Creates a single `ActivityStream`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateActivityStreamPayload'
  /api/create-knowledge-base-article-delayed-job:
    post:
      operationId: createKnowledgeBaseArticleDelayedJob_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/CreateKnowledgeBaseArticleDelayedJobInput
                createKnowledgeBaseArticleDelayedJob_knowledgeBaseArticleDelayedJobEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseArticleDelayedJobsOrderBy
              required:
                - input
      responses:
        '200':
          description: Creates a single `KnowledgeBaseArticleDelayedJob`.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CreateKnowledgeBaseArticleDelayedJobPayload
  /api/create-knowledge-base-article-translation:
    post:
      operationId: createKnowledgeBaseArticleTranslation_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/CreateKnowledgeBaseArticleTranslationInput
                createKnowledgeBaseArticleTranslation_knowledgeBaseArticleTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseArticleTranslationsOrderBy
              required:
                - input
      responses:
        '200':
          description: Creates a single `KnowledgeBaseArticleTranslation`.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CreateKnowledgeBaseArticleTranslationPayload
  /api/create-knowledge-base-article:
    post:
      operationId: createKnowledgeBaseArticle__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                knowledge_base_id:
                  type: string
                kb_locale_id:
                  type: string
                category_id:
                  type: string
                article_id:
                  type: string
                position:
                  type: integer
                  format: int32
                created_at:
                  type: string
                updated_at:
                  type: string
                title:
                  type: string
                body:
                  type: string
                keywords:
                  type: string
                title_tag:
                  type: string
                meta_description:
                  type: string
                active:
                  type: boolean
                publish_now:
                  type: boolean
                schedule_at:
                  type: string
                list_id:
                  type: integer
                  format: int32
              required:
                - knowledge_base_id
                - kb_locale_id
                - category_id
                - title
                - active
                - publish_now
      responses:
        '200':
          description: Creates a knowledgebase article
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/create-knowledge-base-category:
    post:
      operationId: createKnowledgeBaseCategory__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                knowledge_base_id:
                  type: string
                kb_locale_id:
                  type: string
                parent_id:
                  type: string
                category_id:
                  type: string
                category_icon:
                  type: string
                position:
                  type: integer
                  format: int32
                created_at:
                  type: string
                updated_at:
                  type: string
                schedule_at:
                  type: string
                publish_now:
                  type: boolean
                name:
                  type: string
                title_tag:
                  type: string
                footer:
                  type: string
                keywords:
                  type: string
                meta_description:
                  type: string
                permission:
                  type: string
                active:
                  type: boolean
                list_id:
                  type: integer
                  format: int32
              required:
                - knowledge_base_id
                - kb_locale_id
                - parent_id
                - category_id
                - publish_now
                - name
                - active
      responses:
        '200':
          description: Creates a knowledgebase category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/create-knowledge-base-category-delayed-job:
    post:
      operationId: createKnowledgeBaseCategoryDelayedJob_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/CreateKnowledgeBaseCategoryDelayedJobInput
                createKnowledgeBaseCategoryDelayedJob_knowledgeBaseCategoryDelayedJobEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseCategoryDelayedJobsOrderBy
              required:
                - input
      responses:
        '200':
          description: Creates a single `KnowledgeBaseCategoryDelayedJob`.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CreateKnowledgeBaseCategoryDelayedJobPayload
  /api/create-knowledge-base-category-translation:
    post:
      operationId: createKnowledgeBaseCategoryTranslation_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/CreateKnowledgeBaseCategoryTranslationInput
                createKnowledgeBaseCategoryTranslation_knowledgeBaseCategoryTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseCategoryTranslationsOrderBy
              required:
                - input
      responses:
        '200':
          description: Creates a single `KnowledgeBaseCategoryTranslation`.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CreateKnowledgeBaseCategoryTranslationPayload
  /api/create-knowledge-base-list:
    post:
      operationId: createKnowledgeBaseList_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/CreateKnowledgeBaseListInput'
                createKnowledgeBaseList_knowledgeBaseListEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseListsOrderBy'
              required:
                - input
      responses:
        '200':
          description: Creates a single `KnowledgeBaseList`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKnowledgeBaseListPayload'
  /api/create-knowledge-base-translation:
    post:
      operationId: createKnowledgeBaseTranslation_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/CreateKnowledgeBaseTranslationInput'
                createKnowledgeBaseTranslation_knowledgeBaseTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseTranslationsOrderBy'
              required:
                - input
      responses:
        '200':
          description: Creates a single `KnowledgeBaseTranslation`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKnowledgeBaseTranslationPayload'
  /api/create-knowledge-basis:
    post:
      operationId: createKnowledgeBasis_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/CreateKnowledgeBasisInput'
                createKnowledgeBasis_knowledgeBasisEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBasesOrderBy'
              required:
                - input
      responses:
        '200':
          description: Creates a single `KnowledgeBasis`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKnowledgeBasisPayload'
  /api/create-locale:
    post:
      operationId: createLocale_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/CreateLocaleInput'
                createLocale_localeEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/LocalesOrderBy'
              required:
                - input
      responses:
        '200':
          description: Creates a single `Locale`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLocalePayload'
  /api/update-activity-stream:
    post:
      operationId: updateActivityStream_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/UpdateActivityStreamInput'
                updateActivityStream_activityStreamEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/ActivityStreamsOrderBy'
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `ActivityStream` using its globally unique id and a
            patch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActivityStreamPayload'
  /api/update-activity-stream-by-id:
    post:
      operationId: updateActivityStreamById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/UpdateActivityStreamByIdInput'
                updateActivityStreamById_activityStreamEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/ActivityStreamsOrderBy'
              required:
                - input
      responses:
        '200':
          description: Updates a single `ActivityStream` using a unique key and a patch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActivityStreamPayload'
  /api/update-knowledge-base-article-delayed-job:
    post:
      operationId: updateKnowledgeBaseArticleDelayedJob_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/UpdateKnowledgeBaseArticleDelayedJobInput
                updateKnowledgeBaseArticleDelayedJob_knowledgeBaseArticleDelayedJobEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseArticleDelayedJobsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBaseArticleDelayedJob` using its globally
            unique id and a patch.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpdateKnowledgeBaseArticleDelayedJobPayload
  /api/update-knowledge-base-article-delayed-job-by-id:
    post:
      operationId: updateKnowledgeBaseArticleDelayedJobById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/UpdateKnowledgeBaseArticleDelayedJobByIdInput
                updateKnowledgeBaseArticleDelayedJobById_knowledgeBaseArticleDelayedJobEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseArticleDelayedJobsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBaseArticleDelayedJob` using a unique key
            and a patch.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpdateKnowledgeBaseArticleDelayedJobPayload
  /api/update-knowledge-base-article-translation:
    post:
      operationId: updateKnowledgeBaseArticleTranslation_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/UpdateKnowledgeBaseArticleTranslationInput
                updateKnowledgeBaseArticleTranslation_knowledgeBaseArticleTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseArticleTranslationsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBaseArticleTranslation` using its
            globally unique id and a patch.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpdateKnowledgeBaseArticleTranslationPayload
  /api/update-knowledge-base-article-translation-by-id:
    post:
      operationId: updateKnowledgeBaseArticleTranslationById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/UpdateKnowledgeBaseArticleTranslationByIdInput
                updateKnowledgeBaseArticleTranslationById_knowledgeBaseArticleTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseArticleTranslationsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBaseArticleTranslation` using a unique
            key and a patch.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpdateKnowledgeBaseArticleTranslationPayload
  /api/update-knowledge-base-article:
    post:
      operationId: updateKnowledgeBaseArticle__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                knowledge_base_id:
                  type: string
                kb_locale_id:
                  type: string
                category_id:
                  type: string
                article_id:
                  type: string
                position:
                  type: integer
                  format: int32
                created_at:
                  type: string
                updated_at:
                  type: string
                title:
                  type: string
                body:
                  type: string
                keywords:
                  type: string
                title_tag:
                  type: string
                meta_description:
                  type: string
                active:
                  type: boolean
                publish_now:
                  type: boolean
                schedule_at:
                  type: string
                list_id:
                  type: integer
                  format: int32
              required:
                - knowledge_base_id
                - kb_locale_id
                - category_id
                - article_id
                - title
                - active
                - publish_now
      responses:
        '200':
          description: Updates a knowledgebase article
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/update-knowledge-base-article-by-id:
    post:
      operationId: updateKnowledgeBaseArticleById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/UpdateKnowledgeBaseArticleByIdInput'
                updateKnowledgeBaseArticleById_knowledgeBaseArticleEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseArticlesOrderBy'
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBaseArticle` using a unique key and a
            patch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKnowledgeBaseArticlePayload'
  /api/update-knowledge-base-category:
    post:
      operationId: updateKnowledgeBaseCategory__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                knowledge_base_id:
                  type: string
                kb_locale_id:
                  type: string
                parent_id:
                  type: string
                category_id:
                  type: string
                category_icon:
                  type: string
                position:
                  type: integer
                  format: int32
                created_at:
                  type: string
                updated_at:
                  type: string
                schedule_at:
                  type: string
                publish_now:
                  type: boolean
                name:
                  type: string
                title_tag:
                  type: string
                footer:
                  type: string
                keywords:
                  type: string
                meta_description:
                  type: string
                permission:
                  type: string
                active:
                  type: boolean
                list_id:
                  type: integer
                  format: int32
              required:
                - knowledge_base_id
                - kb_locale_id
                - parent_id
                - category_id
                - publish_now
                - name
                - active
      responses:
        '200':
          description: Updates a knowledgebase category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/update-knowledge-base-category-by-id:
    post:
      operationId: updateKnowledgeBaseCategoryById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/UpdateKnowledgeBaseCategoryByIdInput'
                updateKnowledgeBaseCategoryById_knowledgeBaseCategoryEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseCategoriesOrderBy'
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBaseCategory` using a unique key and a
            patch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKnowledgeBaseCategoryPayload'
  /api/update-knowledge-base-category-delayed-job:
    post:
      operationId: updateKnowledgeBaseCategoryDelayedJob_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/UpdateKnowledgeBaseCategoryDelayedJobInput
                updateKnowledgeBaseCategoryDelayedJob_knowledgeBaseCategoryDelayedJobEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseCategoryDelayedJobsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBaseCategoryDelayedJob` using its
            globally unique id and a patch.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpdateKnowledgeBaseCategoryDelayedJobPayload
  /api/update-knowledge-base-category-delayed-job-by-id:
    post:
      operationId: updateKnowledgeBaseCategoryDelayedJobById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/UpdateKnowledgeBaseCategoryDelayedJobByIdInput
                updateKnowledgeBaseCategoryDelayedJobById_knowledgeBaseCategoryDelayedJobEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseCategoryDelayedJobsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBaseCategoryDelayedJob` using a unique
            key and a patch.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpdateKnowledgeBaseCategoryDelayedJobPayload
  /api/update-knowledge-base-category-translation:
    post:
      operationId: updateKnowledgeBaseCategoryTranslation_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/UpdateKnowledgeBaseCategoryTranslationInput
                updateKnowledgeBaseCategoryTranslation_knowledgeBaseCategoryTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseCategoryTranslationsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBaseCategoryTranslation` using its
            globally unique id and a patch.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpdateKnowledgeBaseCategoryTranslationPayload
  /api/update-knowledge-base-category-translation-by-id:
    post:
      operationId: updateKnowledgeBaseCategoryTranslationById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/UpdateKnowledgeBaseCategoryTranslationByIdInput
                updateKnowledgeBaseCategoryTranslationById_knowledgeBaseCategoryTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseCategoryTranslationsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBaseCategoryTranslation` using a unique
            key and a patch.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpdateKnowledgeBaseCategoryTranslationPayload
  /api/update-knowledge-base-list:
    post:
      operationId: updateKnowledgeBaseList_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/UpdateKnowledgeBaseListInput'
                updateKnowledgeBaseList_knowledgeBaseListEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseListsOrderBy'
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBaseList` using its globally unique id
            and a patch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKnowledgeBaseListPayload'
  /api/update-knowledge-base-list-by-id:
    post:
      operationId: updateKnowledgeBaseListById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/UpdateKnowledgeBaseListByIdInput'
                updateKnowledgeBaseListById_knowledgeBaseListEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseListsOrderBy'
              required:
                - input
      responses:
        '200':
          description: Updates a single `KnowledgeBaseList` using a unique key and a patch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKnowledgeBaseListPayload'
  /api/update-knowledge-base-translation:
    post:
      operationId: updateKnowledgeBaseTranslation_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/UpdateKnowledgeBaseTranslationInput'
                updateKnowledgeBaseTranslation_knowledgeBaseTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseTranslationsOrderBy'
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBaseTranslation` using its globally
            unique id and a patch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKnowledgeBaseTranslationPayload'
  /api/update-knowledge-base-translation-by-id:
    post:
      operationId: updateKnowledgeBaseTranslationById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/UpdateKnowledgeBaseTranslationByIdInput'
                updateKnowledgeBaseTranslationById_knowledgeBaseTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseTranslationsOrderBy'
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBaseTranslation` using a unique key and a
            patch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKnowledgeBaseTranslationPayload'
  /api/update-knowledge-basis:
    post:
      operationId: updateKnowledgeBasis_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/UpdateKnowledgeBasisInput'
                updateKnowledgeBasis_knowledgeBasisEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBasesOrderBy'
              required:
                - input
      responses:
        '200':
          description: >-
            Updates a single `KnowledgeBasis` using its globally unique id and a
            patch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKnowledgeBasisPayload'
  /api/update-knowledge-basis-by-id:
    post:
      operationId: updateKnowledgeBasisById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/UpdateKnowledgeBasisByIdInput'
                updateKnowledgeBasisById_knowledgeBasisEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBasesOrderBy'
              required:
                - input
      responses:
        '200':
          description: Updates a single `KnowledgeBasis` using a unique key and a patch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKnowledgeBasisPayload'
  /api/update-locale:
    post:
      operationId: updateLocale_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/UpdateLocaleInput'
                updateLocale_localeEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/LocalesOrderBy'
              required:
                - input
      responses:
        '200':
          description: Updates a single `Locale` using its globally unique id and a patch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLocalePayload'
  /api/update-locale-by-id:
    post:
      operationId: updateLocaleById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/UpdateLocaleByIdInput'
                updateLocaleById_localeEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/LocalesOrderBy'
              required:
                - input
      responses:
        '200':
          description: Updates a single `Locale` using a unique key and a patch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLocalePayload'
  /api/delete-activity-stream:
    post:
      operationId: deleteActivityStream_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteActivityStreamInput'
                deleteActivityStream_activityStreamEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/ActivityStreamsOrderBy'
              required:
                - input
      responses:
        '200':
          description: Deletes a single `ActivityStream` using its globally unique id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActivityStreamPayload'
  /api/delete-activity-stream-by-id:
    post:
      operationId: deleteActivityStreamById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteActivityStreamByIdInput'
                deleteActivityStreamById_activityStreamEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/ActivityStreamsOrderBy'
              required:
                - input
      responses:
        '200':
          description: Deletes a single `ActivityStream` using a unique key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActivityStreamPayload'
  /api/delete-knowledge-base-article-delayed-job:
    post:
      operationId: deleteKnowledgeBaseArticleDelayedJob_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/DeleteKnowledgeBaseArticleDelayedJobInput
                deleteKnowledgeBaseArticleDelayedJob_knowledgeBaseArticleDelayedJobEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseArticleDelayedJobsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Deletes a single `KnowledgeBaseArticleDelayedJob` using its globally
            unique id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DeleteKnowledgeBaseArticleDelayedJobPayload
  /api/delete-knowledge-base-article-delayed-job-by-id:
    post:
      operationId: deleteKnowledgeBaseArticleDelayedJobById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/DeleteKnowledgeBaseArticleDelayedJobByIdInput
                deleteKnowledgeBaseArticleDelayedJobById_knowledgeBaseArticleDelayedJobEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseArticleDelayedJobsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Deletes a single `KnowledgeBaseArticleDelayedJob` using a unique
            key.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DeleteKnowledgeBaseArticleDelayedJobPayload
  /api/delete-knowledge-base-article-translation:
    post:
      operationId: deleteKnowledgeBaseArticleTranslation_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/DeleteKnowledgeBaseArticleTranslationInput
                deleteKnowledgeBaseArticleTranslation_knowledgeBaseArticleTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseArticleTranslationsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Deletes a single `KnowledgeBaseArticleTranslation` using its
            globally unique id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DeleteKnowledgeBaseArticleTranslationPayload
  /api/delete-knowledge-base-article-translation-by-id:
    post:
      operationId: deleteKnowledgeBaseArticleTranslationById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/DeleteKnowledgeBaseArticleTranslationByIdInput
                deleteKnowledgeBaseArticleTranslationById_knowledgeBaseArticleTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseArticleTranslationsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Deletes a single `KnowledgeBaseArticleTranslation` using a unique
            key.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DeleteKnowledgeBaseArticleTranslationPayload
  /api/delete-knowledge-base-article:
    post:
      operationId: deleteKnowledgeBaseArticle_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteKnowledgeBaseArticleInput'
                deleteKnowledgeBaseArticle_knowledgeBaseArticleEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseArticlesOrderBy'
              required:
                - input
      responses:
        '200':
          description: >-
            Deletes a single `KnowledgeBaseArticle` using its globally unique
            id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKnowledgeBaseArticlePayload'
  /api/delete-knowledge-base-article-by-id:
    post:
      operationId: deleteKnowledgeBaseArticleById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteKnowledgeBaseArticleByIdInput'
                deleteKnowledgeBaseArticleById_knowledgeBaseArticleEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseArticlesOrderBy'
              required:
                - input
      responses:
        '200':
          description: Deletes a single `KnowledgeBaseArticle` using a unique key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKnowledgeBaseArticlePayload'
  /api/delete-knowledge-base-category:
    post:
      operationId: deleteKnowledgeBaseCategory_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteKnowledgeBaseCategoryInput'
                deleteKnowledgeBaseCategory_knowledgeBaseCategoryEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseCategoriesOrderBy'
              required:
                - input
      responses:
        '200':
          description: >-
            Deletes a single `KnowledgeBaseCategory` using its globally unique
            id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKnowledgeBaseCategoryPayload'
  /api/delete-knowledge-base-category-by-id:
    post:
      operationId: deleteKnowledgeBaseCategoryById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteKnowledgeBaseCategoryByIdInput'
                deleteKnowledgeBaseCategoryById_knowledgeBaseCategoryEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseCategoriesOrderBy'
              required:
                - input
      responses:
        '200':
          description: Deletes a single `KnowledgeBaseCategory` using a unique key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKnowledgeBaseCategoryPayload'
  /api/delete-knowledge-base-category-delayed-job:
    post:
      operationId: deleteKnowledgeBaseCategoryDelayedJob_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/DeleteKnowledgeBaseCategoryDelayedJobInput
                deleteKnowledgeBaseCategoryDelayedJob_knowledgeBaseCategoryDelayedJobEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseCategoryDelayedJobsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Deletes a single `KnowledgeBaseCategoryDelayedJob` using its
            globally unique id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DeleteKnowledgeBaseCategoryDelayedJobPayload
  /api/delete-knowledge-base-category-delayed-job-by-id:
    post:
      operationId: deleteKnowledgeBaseCategoryDelayedJobById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/DeleteKnowledgeBaseCategoryDelayedJobByIdInput
                deleteKnowledgeBaseCategoryDelayedJobById_knowledgeBaseCategoryDelayedJobEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseCategoryDelayedJobsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Deletes a single `KnowledgeBaseCategoryDelayedJob` using a unique
            key.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DeleteKnowledgeBaseCategoryDelayedJobPayload
  /api/delete-knowledge-base-category-translation:
    post:
      operationId: deleteKnowledgeBaseCategoryTranslation_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/DeleteKnowledgeBaseCategoryTranslationInput
                deleteKnowledgeBaseCategoryTranslation_knowledgeBaseCategoryTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseCategoryTranslationsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Deletes a single `KnowledgeBaseCategoryTranslation` using its
            globally unique id.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DeleteKnowledgeBaseCategoryTranslationPayload
  /api/delete-knowledge-base-category-translation-by-id:
    post:
      operationId: deleteKnowledgeBaseCategoryTranslationById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: >-
                    #/components/schemas/DeleteKnowledgeBaseCategoryTranslationByIdInput
                deleteKnowledgeBaseCategoryTranslationById_knowledgeBaseCategoryTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/KnowledgeBaseCategoryTranslationsOrderBy
              required:
                - input
      responses:
        '200':
          description: >-
            Deletes a single `KnowledgeBaseCategoryTranslation` using a unique
            key.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DeleteKnowledgeBaseCategoryTranslationPayload
  /api/delete-knowledge-base-list:
    post:
      operationId: deleteKnowledgeBaseList_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteKnowledgeBaseListInput'
                deleteKnowledgeBaseList_knowledgeBaseListEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseListsOrderBy'
              required:
                - input
      responses:
        '200':
          description: Deletes a single `KnowledgeBaseList` using its globally unique id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKnowledgeBaseListPayload'
  /api/delete-knowledge-base-list-by-id:
    post:
      operationId: deleteKnowledgeBaseListById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteKnowledgeBaseListByIdInput'
                deleteKnowledgeBaseListById_knowledgeBaseListEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseListsOrderBy'
              required:
                - input
      responses:
        '200':
          description: Deletes a single `KnowledgeBaseList` using a unique key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKnowledgeBaseListPayload'
  /api/delete-knowledge-base-translation:
    post:
      operationId: deleteKnowledgeBaseTranslation_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteKnowledgeBaseTranslationInput'
                deleteKnowledgeBaseTranslation_knowledgeBaseTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseTranslationsOrderBy'
              required:
                - input
      responses:
        '200':
          description: >-
            Deletes a single `KnowledgeBaseTranslation` using its globally
            unique id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKnowledgeBaseTranslationPayload'
  /api/delete-knowledge-base-translation-by-id:
    post:
      operationId: deleteKnowledgeBaseTranslationById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteKnowledgeBaseTranslationByIdInput'
                deleteKnowledgeBaseTranslationById_knowledgeBaseTranslationEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseTranslationsOrderBy'
              required:
                - input
      responses:
        '200':
          description: Deletes a single `KnowledgeBaseTranslation` using a unique key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKnowledgeBaseTranslationPayload'
  /api/delete-knowledge-basis:
    post:
      operationId: deleteKnowledgeBasis_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteKnowledgeBasisInput'
                deleteKnowledgeBasis_knowledgeBasisEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBasesOrderBy'
              required:
                - input
      responses:
        '200':
          description: Deletes a single `KnowledgeBasis` using its globally unique id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKnowledgeBasisPayload'
  /api/delete-knowledge-basis-by-id:
    post:
      operationId: deleteKnowledgeBasisById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteKnowledgeBasisByIdInput'
                deleteKnowledgeBasisById_knowledgeBasisEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgeBasesOrderBy'
              required:
                - input
      responses:
        '200':
          description: Deletes a single `KnowledgeBasis` using a unique key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteKnowledgeBasisPayload'
  /api/delete-locale:
    post:
      operationId: deleteLocale_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteLocaleInput'
                deleteLocale_localeEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/LocalesOrderBy'
              required:
                - input
      responses:
        '200':
          description: Deletes a single `Locale` using its globally unique id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLocalePayload'
  /api/delete-locale-by-id:
    post:
      operationId: deleteLocaleById_mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/DeleteLocaleByIdInput'
                deleteLocaleById_localeEdge_orderBy:
                  type: array
                  items:
                    $ref: '#/components/schemas/LocalesOrderBy'
              required:
                - input
      responses:
        '200':
          description: Deletes a single `Locale` using a unique key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLocalePayload'
  /api/import-knowledgebase:
    post:
      operationId: importKnowledgebase__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  $ref: '#/components/schemas/Upload'
      responses:
        '200':
          description: Imports a knowledgebase
          content:
            application/json:
              schema:
                type: boolean
  /api/create-knowledgebase:
    post:
      operationId: createKnowledgebase__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                icon:
                  type: string
                footer:
                  type: string
                homepage_layout:
                  type: string
                category_layout:
                  type: string
                active:
                  type: boolean
                front_page:
                  type: string
                kb_locale_ids:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgebaseCreateLocale'
              required:
                - name
                - icon
                - footer
                - homepage_layout
                - category_layout
                - active
                - front_page
                - kb_locale_ids
      responses:
        '200':
          description: Creates a new knowledgebase
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/update-knowledgebase:
    post:
      operationId: updateKnowledgebase__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                knowledge_base_id:
                  type: string
                name:
                  type: string
                icon:
                  type: string
                footer:
                  type: string
                homepage_layout:
                  type: string
                category_layout:
                  type: string
                active:
                  type: boolean
                front_page:
                  type: string
                kb_locale_ids:
                  type: array
                  items:
                    $ref: '#/components/schemas/KnowledgebaseCreateLocale'
              required:
                - knowledge_base_id
                - name
                - icon
                - footer
                - homepage_layout
                - category_layout
                - active
                - front_page
                - kb_locale_ids
      responses:
        '200':
          description: Updates a knowledgebase
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/rearrange-knowledgebase-positions:
    post:
      operationId: rearrangeKnowledgebasePositions__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                knowledge_base_ids:
                  type: array
                  items:
                    type: integer
                    format: int32
              required:
                - knowledge_base_ids
      responses:
        '200':
          description: Reorder the knowledgebase positions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/rearrange-knowledgebase-category-positions:
    post:
      operationId: rearrangeKnowledgebaseCategoryPositions__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                category_ids:
                  type: array
                  items:
                    type: integer
                    format: int32
              required:
                - category_ids
      responses:
        '200':
          description: Reorder the knowledgebase category positions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/rearrange-knowledgebase-article-positions:
    post:
      operationId: rearrangeKnowledgebaseArticlePositions__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                article_ids:
                  type: array
                  items:
                    type: integer
                    format: int32
              required:
                - article_ids
      responses:
        '200':
          description: Reorder the knowledgebase article positions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/schedule-knowledgebase-category-delete:
    post:
      operationId: scheduleKnowledgebaseCategoryDelete__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                knowledge_base_category_translation_id:
                  type: string
                run_at:
                  type: string
                knowledge_base_id:
                  type: string
              required:
                - knowledge_base_category_translation_id
                - run_at
                - knowledge_base_id
      responses:
        '200':
          description: Schedules a category for deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/schedule-knowledge-base-category-update:
    post:
      operationId: scheduleKnowledgeBaseCategoryUpdate__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                knowledge_base_category_translation_id:
                  type: string
                run_at:
                  type: string
                knowledge_base_id:
                  type: string
                update_metadata:
                  $ref: >-
                    #/components/schemas/KnowledgeBaseCategoryTranslationTypeInput
              required:
                - knowledge_base_category_translation_id
                - knowledge_base_id
                - update_metadata
      responses:
        '200':
          description: Schedules a category for update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/archive-knowledge-base-category:
    post:
      operationId: archiveKnowledgeBaseCategory__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
              required:
                - category_id
      responses:
        '200':
          description: Archives a category with its subcategories and translations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/unarchive-knowledge-base-category:
    post:
      operationId: unarchiveKnowledgeBaseCategory__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
              required:
                - category_id
      responses:
        '200':
          description: Reinstates a category with its subcategories and translations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/remove-schedule-for-knowledgebase-category:
    post:
      operationId: removeScheduleForKnowledgebaseCategory__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                knowledge_base_category_translation_id:
                  type: string
                schedule_type:
                  type: string
              required:
                - knowledge_base_category_translation_id
                - schedule_type
      responses:
        '200':
          description: >-
            Removes a category from being scheduled for deletion, update or
            publication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/archive-knowledge-base-article:
    post:
      operationId: archiveKnowledgeBaseArticle__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
              required:
                - category_id
      responses:
        '200':
          description: Archives an article with its translations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/unarchive-knowledge-base-article:
    post:
      operationId: unarchiveKnowledgeBaseArticle__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
              required:
                - category_id
      responses:
        '200':
          description: Reinstates an article with its translations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/schedule-knowledge-base-article-update:
    post:
      operationId: scheduleKnowledgeBaseArticleUpdate__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                knowledge_base_article_translation_id:
                  type: string
                run_at:
                  type: string
                knowledge_base_id:
                  type: string
                article_id:
                  type: string
                update_metadata:
                  $ref: >-
                    #/components/schemas/KnowledgeBaseArticleTranslationTypeInput
              required:
                - knowledge_base_article_translation_id
                - knowledge_base_id
                - article_id
                - update_metadata
      responses:
        '200':
          description: Schedules an article for update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/schedule-knowledgebase-article-delete:
    post:
      operationId: scheduleKnowledgebaseArticleDelete__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                knowledge_base_article_translation_id:
                  type: string
                run_at:
                  type: string
                knowledge_base_id:
                  type: string
                article_id:
                  type: string
              required:
                - knowledge_base_article_translation_id
                - run_at
                - knowledge_base_id
                - article_id
      responses:
        '200':
          description: Schedules an article for deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/remove-schedule-for-knowledge-base-article:
    post:
      operationId: removeScheduleForKnowledgeBaseArticle__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                knowledge_base_article_translation_id:
                  type: string
                schedule_type:
                  type: string
              required:
                - knowledge_base_article_translation_id
                - schedule_type
      responses:
        '200':
          description: Removes the schedule for an article either update or delete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /api/delete-icon:
    post:
      operationId: deleteIcon__mutation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
              required:
                - filename
      responses:
        '200':
          description: Deletes an uploaded icon
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
components:
  schemas:
    Query:
      type: object
      required:
        - query
        - nodeId
      properties:
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Exposes the root query type nested one level down. This is helpful
            for Relay 1

            which can only query top level fields if they are in a particular
            form.
        nodeId:
          type: string
          description: >-
            The root query type must be a `Node` to work well with Relay 1
            mutations. This just resolves to `query`.
        node:
          type: object
          description: Fetches an object given its globally unique `ID`.
        allActivityStreams:
          $ref: '#/components/schemas/ActivityStreamsConnection'
          description: Reads and enables pagination through a set of `ActivityStream`.
        allKnowledgeBaseArticleDelayedJobs:
          $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJobsConnection'
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseArticleDelayedJob`.
        allKnowledgeBaseArticleTranslations:
          $ref: '#/components/schemas/KnowledgeBaseArticleTranslationsConnection'
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseArticleTranslation`.
        allKnowledgeBaseArticles:
          $ref: '#/components/schemas/KnowledgeBaseArticlesConnection'
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseArticle`.
        allKnowledgeBaseCategories:
          $ref: '#/components/schemas/KnowledgeBaseCategoriesConnection'
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseCategory`.
        allKnowledgeBaseCategoryDelayedJobs:
          $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJobsConnection'
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseCategoryDelayedJob`.
        allKnowledgeBaseCategoryTranslations:
          $ref: '#/components/schemas/KnowledgeBaseCategoryTranslationsConnection'
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseCategoryTranslation`.
        allKnowledgeBaseLists:
          $ref: '#/components/schemas/KnowledgeBaseListsConnection'
          description: Reads and enables pagination through a set of `KnowledgeBaseList`.
        allKnowledgeBaseTranslations:
          $ref: '#/components/schemas/KnowledgeBaseTranslationsConnection'
          description: >-
            Reads and enables pagination through a set of
            `KnowledgeBaseTranslation`.
        allKnowledgeBases:
          $ref: '#/components/schemas/KnowledgeBasesConnection'
          description: Reads and enables pagination through a set of `KnowledgeBasis`.
        allLocales:
          $ref: '#/components/schemas/LocalesConnection'
          description: Reads and enables pagination through a set of `Locale`.
        activityStreamById:
          $ref: '#/components/schemas/ActivityStream'
        knowledgeBaseArticleDelayedJobById:
          $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJob'
        knowledgeBaseArticleTranslationById:
          $ref: '#/components/schemas/KnowledgeBaseArticleTranslation'
        knowledgeBaseArticleById:
          $ref: '#/components/schemas/KnowledgeBaseArticle'
        knowledgeBaseCategoryById:
          $ref: '#/components/schemas/KnowledgeBaseCategory'
        knowledgeBaseCategoryDelayedJobById:
          $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJob'
        knowledgeBaseCategoryTranslationById:
          $ref: '#/components/schemas/KnowledgeBaseCategoryTranslation'
        knowledgeBaseListById:
          $ref: '#/components/schemas/KnowledgeBaseList'
        knowledgeBaseTranslationById:
          $ref: '#/components/schemas/KnowledgeBaseTranslation'
        knowledgeBasisById:
          $ref: '#/components/schemas/KnowledgeBasis'
        localeById:
          $ref: '#/components/schemas/Locale'
        activityStream:
          $ref: '#/components/schemas/ActivityStream'
          description: Reads a single `ActivityStream` using its globally unique `ID`.
        knowledgeBaseArticleDelayedJob:
          $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJob'
          description: >-
            Reads a single `KnowledgeBaseArticleDelayedJob` using its globally
            unique `ID`.
        knowledgeBaseArticleTranslation:
          $ref: '#/components/schemas/KnowledgeBaseArticleTranslation'
          description: >-
            Reads a single `KnowledgeBaseArticleTranslation` using its globally
            unique `ID`.
        knowledgeBaseArticle:
          $ref: '#/components/schemas/KnowledgeBaseArticle'
          description: >-
            Reads a single `KnowledgeBaseArticle` using its globally unique
            `ID`.
        knowledgeBaseCategory:
          $ref: '#/components/schemas/KnowledgeBaseCategory'
          description: >-
            Reads a single `KnowledgeBaseCategory` using its globally unique
            `ID`.
        knowledgeBaseCategoryDelayedJob:
          $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJob'
          description: >-
            Reads a single `KnowledgeBaseCategoryDelayedJob` using its globally
            unique `ID`.
        knowledgeBaseCategoryTranslation:
          $ref: '#/components/schemas/KnowledgeBaseCategoryTranslation'
          description: >-
            Reads a single `KnowledgeBaseCategoryTranslation` using its globally
            unique `ID`.
        knowledgeBaseList:
          $ref: '#/components/schemas/KnowledgeBaseList'
          description: Reads a single `KnowledgeBaseList` using its globally unique `ID`.
        knowledgeBaseTranslation:
          $ref: '#/components/schemas/KnowledgeBaseTranslation'
          description: >-
            Reads a single `KnowledgeBaseTranslation` using its globally unique
            `ID`.
        knowledgeBasis:
          $ref: '#/components/schemas/KnowledgeBasis'
          description: Reads a single `KnowledgeBasis` using its globally unique `ID`.
        locale:
          $ref: '#/components/schemas/Locale'
          description: Reads a single `Locale` using its globally unique `ID`.
        ping:
          type: string
        knowledgebases_:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseHybridStatType'
          description: Get all knowledgebases
        knowledgebase_:
          $ref: '#/components/schemas/Knowledgebase'
          description: Get a single knowledgebase by id
        knowledgebaseTranslations_:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgebaseTranslationType'
          description: Get all knowledgebase translations for a given knowledge base
        getKnowledgeBaseLanguageSelectionList_:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseLocales'
          description: Get all knowledgebase language selection for a given knowledgebase
        getLocales_:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseLocales'
          description: Get all knowledgebase locales
        knowledgebaseTranslationStatusColor_:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgebaseTranslationStatusColor'
          description: >-
            Get the status color for the knowledgebase translations at the
            category specified
        getScheduleForKnowledgebaseCategoryTranslation_:
          $ref: >-
            #/components/schemas/StatusMessageForKnowledgeBaseCategoryScheduleType
          description: >-
            Get a knowledgebase translation that is scheduled for publication,
            deletion or update
        getKnowledgebaseCategories_:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseCategoryHybridStatType'
          description: >-
            Get all knowledgebase category translations in a knowledge base for
            a specified locale and level
        getKnowledgeBaseCategoryTranslation_:
          $ref: '#/components/schemas/KnowledgeBaseCategoryHybridStatType'
          description: >-
            Get a knowledgebase category translations in a knowledge base for a
            specified locale
        getKnowledgeBaseCategory_:
          $ref: '#/components/schemas/KnowledgeBaseCategoryType'
          description: Get a knowledgebase category by id
        getKnowledgeBaseArticles_:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseArticleType'
          description: >-
            Get all knowledgebase category articles in for a locale at a given
            level
        getKnowledgeBaseArticleTranslation_:
          $ref: '#/components/schemas/KnowledgeBaseArticleType'
          description: Returns a knowledge base article translation for a given locale
        getScheduleForKnowledgeBaseArticle_:
          $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJobType'
          description: >-
            Returns details about a scheduled knowledgebase article for deletion
            or update
        getKnowledgeBaseList_:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseListType'
          description: Returns the list for the knowledgebase specified
        getLevelStatus_:
          $ref: '#/components/schemas/KnowledgeBaseLevelStatusHybridType'
          description: Returns the status of a level
        getKnowledgeBaseCategoryLevel_:
          $ref: '#/components/schemas/KnowledgeBaseCategoryLevelType'
          description: Returns the level and depth of a knowledge base category
        exportKnowledgebase_:
          $ref: '#/components/schemas/ExportKnowledgeBaseType'
          description: Creates an export file for a knowledgebase
      description: Root Query
    Mutation:
      type: object
      properties:
        createActivityStream:
          $ref: '#/components/schemas/CreateActivityStreamPayload'
          description: Creates a single `ActivityStream`.
        createKnowledgeBaseArticleDelayedJob:
          $ref: '#/components/schemas/CreateKnowledgeBaseArticleDelayedJobPayload'
          description: Creates a single `KnowledgeBaseArticleDelayedJob`.
        createKnowledgeBaseArticleTranslation:
          $ref: '#/components/schemas/CreateKnowledgeBaseArticleTranslationPayload'
          description: Creates a single `KnowledgeBaseArticleTranslation`.
        createKnowledgeBaseArticle:
          $ref: '#/components/schemas/CreateKnowledgeBaseArticlePayload'
          description: Creates a single `KnowledgeBaseArticle`.
        createKnowledgeBaseCategory:
          $ref: '#/components/schemas/CreateKnowledgeBaseCategoryPayload'
          description: Creates a single `KnowledgeBaseCategory`.
        createKnowledgeBaseCategoryDelayedJob:
          $ref: '#/components/schemas/CreateKnowledgeBaseCategoryDelayedJobPayload'
          description: Creates a single `KnowledgeBaseCategoryDelayedJob`.
        createKnowledgeBaseCategoryTranslation:
          $ref: '#/components/schemas/CreateKnowledgeBaseCategoryTranslationPayload'
          description: Creates a single `KnowledgeBaseCategoryTranslation`.
        createKnowledgeBaseList:
          $ref: '#/components/schemas/CreateKnowledgeBaseListPayload'
          description: Creates a single `KnowledgeBaseList`.
        createKnowledgeBaseTranslation:
          $ref: '#/components/schemas/CreateKnowledgeBaseTranslationPayload'
          description: Creates a single `KnowledgeBaseTranslation`.
        createKnowledgeBasis:
          $ref: '#/components/schemas/CreateKnowledgeBasisPayload'
          description: Creates a single `KnowledgeBasis`.
        createLocale:
          $ref: '#/components/schemas/CreateLocalePayload'
          description: Creates a single `Locale`.
        updateActivityStream:
          $ref: '#/components/schemas/UpdateActivityStreamPayload'
          description: >-
            Updates a single `ActivityStream` using its globally unique id and a
            patch.
        updateActivityStreamById:
          $ref: '#/components/schemas/UpdateActivityStreamPayload'
          description: Updates a single `ActivityStream` using a unique key and a patch.
        updateKnowledgeBaseArticleDelayedJob:
          $ref: '#/components/schemas/UpdateKnowledgeBaseArticleDelayedJobPayload'
          description: >-
            Updates a single `KnowledgeBaseArticleDelayedJob` using its globally
            unique id and a patch.
        updateKnowledgeBaseArticleDelayedJobById:
          $ref: '#/components/schemas/UpdateKnowledgeBaseArticleDelayedJobPayload'
          description: >-
            Updates a single `KnowledgeBaseArticleDelayedJob` using a unique key
            and a patch.
        updateKnowledgeBaseArticleTranslation:
          $ref: '#/components/schemas/UpdateKnowledgeBaseArticleTranslationPayload'
          description: >-
            Updates a single `KnowledgeBaseArticleTranslation` using its
            globally unique id and a patch.
        updateKnowledgeBaseArticleTranslationById:
          $ref: '#/components/schemas/UpdateKnowledgeBaseArticleTranslationPayload'
          description: >-
            Updates a single `KnowledgeBaseArticleTranslation` using a unique
            key and a patch.
        updateKnowledgeBaseArticle:
          $ref: '#/components/schemas/UpdateKnowledgeBaseArticlePayload'
          description: >-
            Updates a single `KnowledgeBaseArticle` using its globally unique id
            and a patch.
        updateKnowledgeBaseArticleById:
          $ref: '#/components/schemas/UpdateKnowledgeBaseArticlePayload'
          description: >-
            Updates a single `KnowledgeBaseArticle` using a unique key and a
            patch.
        updateKnowledgeBaseCategory:
          $ref: '#/components/schemas/UpdateKnowledgeBaseCategoryPayload'
          description: >-
            Updates a single `KnowledgeBaseCategory` using its globally unique
            id and a patch.
        updateKnowledgeBaseCategoryById:
          $ref: '#/components/schemas/UpdateKnowledgeBaseCategoryPayload'
          description: >-
            Updates a single `KnowledgeBaseCategory` using a unique key and a
            patch.
        updateKnowledgeBaseCategoryDelayedJob:
          $ref: '#/components/schemas/UpdateKnowledgeBaseCategoryDelayedJobPayload'
          description: >-
            Updates a single `KnowledgeBaseCategoryDelayedJob` using its
            globally unique id and a patch.
        updateKnowledgeBaseCategoryDelayedJobById:
          $ref: '#/components/schemas/UpdateKnowledgeBaseCategoryDelayedJobPayload'
          description: >-
            Updates a single `KnowledgeBaseCategoryDelayedJob` using a unique
            key and a patch.
        updateKnowledgeBaseCategoryTranslation:
          $ref: '#/components/schemas/UpdateKnowledgeBaseCategoryTranslationPayload'
          description: >-
            Updates a single `KnowledgeBaseCategoryTranslation` using its
            globally unique id and a patch.
        updateKnowledgeBaseCategoryTranslationById:
          $ref: '#/components/schemas/UpdateKnowledgeBaseCategoryTranslationPayload'
          description: >-
            Updates a single `KnowledgeBaseCategoryTranslation` using a unique
            key and a patch.
        updateKnowledgeBaseList:
          $ref: '#/components/schemas/UpdateKnowledgeBaseListPayload'
          description: >-
            Updates a single `KnowledgeBaseList` using its globally unique id
            and a patch.
        updateKnowledgeBaseListById:
          $ref: '#/components/schemas/UpdateKnowledgeBaseListPayload'
          description: Updates a single `KnowledgeBaseList` using a unique key and a patch.
        updateKnowledgeBaseTranslation:
          $ref: '#/components/schemas/UpdateKnowledgeBaseTranslationPayload'
          description: >-
            Updates a single `KnowledgeBaseTranslation` using its globally
            unique id and a patch.
        updateKnowledgeBaseTranslationById:
          $ref: '#/components/schemas/UpdateKnowledgeBaseTranslationPayload'
          description: >-
            Updates a single `KnowledgeBaseTranslation` using a unique key and a
            patch.
        updateKnowledgeBasis:
          $ref: '#/components/schemas/UpdateKnowledgeBasisPayload'
          description: >-
            Updates a single `KnowledgeBasis` using its globally unique id and a
            patch.
        updateKnowledgeBasisById:
          $ref: '#/components/schemas/UpdateKnowledgeBasisPayload'
          description: Updates a single `KnowledgeBasis` using a unique key and a patch.
        updateLocale:
          $ref: '#/components/schemas/UpdateLocalePayload'
          description: Updates a single `Locale` using its globally unique id and a patch.
        updateLocaleById:
          $ref: '#/components/schemas/UpdateLocalePayload'
          description: Updates a single `Locale` using a unique key and a patch.
        deleteActivityStream:
          $ref: '#/components/schemas/DeleteActivityStreamPayload'
          description: Deletes a single `ActivityStream` using its globally unique id.
        deleteActivityStreamById:
          $ref: '#/components/schemas/DeleteActivityStreamPayload'
          description: Deletes a single `ActivityStream` using a unique key.
        deleteKnowledgeBaseArticleDelayedJob:
          $ref: '#/components/schemas/DeleteKnowledgeBaseArticleDelayedJobPayload'
          description: >-
            Deletes a single `KnowledgeBaseArticleDelayedJob` using its globally
            unique id.
        deleteKnowledgeBaseArticleDelayedJobById:
          $ref: '#/components/schemas/DeleteKnowledgeBaseArticleDelayedJobPayload'
          description: >-
            Deletes a single `KnowledgeBaseArticleDelayedJob` using a unique
            key.
        deleteKnowledgeBaseArticleTranslation:
          $ref: '#/components/schemas/DeleteKnowledgeBaseArticleTranslationPayload'
          description: >-
            Deletes a single `KnowledgeBaseArticleTranslation` using its
            globally unique id.
        deleteKnowledgeBaseArticleTranslationById:
          $ref: '#/components/schemas/DeleteKnowledgeBaseArticleTranslationPayload'
          description: >-
            Deletes a single `KnowledgeBaseArticleTranslation` using a unique
            key.
        deleteKnowledgeBaseArticle:
          $ref: '#/components/schemas/DeleteKnowledgeBaseArticlePayload'
          description: >-
            Deletes a single `KnowledgeBaseArticle` using its globally unique
            id.
        deleteKnowledgeBaseArticleById:
          $ref: '#/components/schemas/DeleteKnowledgeBaseArticlePayload'
          description: Deletes a single `KnowledgeBaseArticle` using a unique key.
        deleteKnowledgeBaseCategory:
          $ref: '#/components/schemas/DeleteKnowledgeBaseCategoryPayload'
          description: >-
            Deletes a single `KnowledgeBaseCategory` using its globally unique
            id.
        deleteKnowledgeBaseCategoryById:
          $ref: '#/components/schemas/DeleteKnowledgeBaseCategoryPayload'
          description: Deletes a single `KnowledgeBaseCategory` using a unique key.
        deleteKnowledgeBaseCategoryDelayedJob:
          $ref: '#/components/schemas/DeleteKnowledgeBaseCategoryDelayedJobPayload'
          description: >-
            Deletes a single `KnowledgeBaseCategoryDelayedJob` using its
            globally unique id.
        deleteKnowledgeBaseCategoryDelayedJobById:
          $ref: '#/components/schemas/DeleteKnowledgeBaseCategoryDelayedJobPayload'
          description: >-
            Deletes a single `KnowledgeBaseCategoryDelayedJob` using a unique
            key.
        deleteKnowledgeBaseCategoryTranslation:
          $ref: '#/components/schemas/DeleteKnowledgeBaseCategoryTranslationPayload'
          description: >-
            Deletes a single `KnowledgeBaseCategoryTranslation` using its
            globally unique id.
        deleteKnowledgeBaseCategoryTranslationById:
          $ref: '#/components/schemas/DeleteKnowledgeBaseCategoryTranslationPayload'
          description: >-
            Deletes a single `KnowledgeBaseCategoryTranslation` using a unique
            key.
        deleteKnowledgeBaseList:
          $ref: '#/components/schemas/DeleteKnowledgeBaseListPayload'
          description: Deletes a single `KnowledgeBaseList` using its globally unique id.
        deleteKnowledgeBaseListById:
          $ref: '#/components/schemas/DeleteKnowledgeBaseListPayload'
          description: Deletes a single `KnowledgeBaseList` using a unique key.
        deleteKnowledgeBaseTranslation:
          $ref: '#/components/schemas/DeleteKnowledgeBaseTranslationPayload'
          description: >-
            Deletes a single `KnowledgeBaseTranslation` using its globally
            unique id.
        deleteKnowledgeBaseTranslationById:
          $ref: '#/components/schemas/DeleteKnowledgeBaseTranslationPayload'
          description: Deletes a single `KnowledgeBaseTranslation` using a unique key.
        deleteKnowledgeBasis:
          $ref: '#/components/schemas/DeleteKnowledgeBasisPayload'
          description: Deletes a single `KnowledgeBasis` using its globally unique id.
        deleteKnowledgeBasisById:
          $ref: '#/components/schemas/DeleteKnowledgeBasisPayload'
          description: Deletes a single `KnowledgeBasis` using a unique key.
        deleteLocale:
          $ref: '#/components/schemas/DeleteLocalePayload'
          description: Deletes a single `Locale` using its globally unique id.
        deleteLocaleById:
          $ref: '#/components/schemas/DeleteLocalePayload'
          description: Deletes a single `Locale` using a unique key.
        importKnowledgebase_:
          type: boolean
          description: Imports a knowledgebase
        createKnowledgebase_:
          $ref: '#/components/schemas/Response'
          description: Creates a new knowledgebase
        updateKnowledgebase_:
          $ref: '#/components/schemas/Response'
          description: Updates a knowledgebase
        rearrangeKnowledgebasePositions_:
          $ref: '#/components/schemas/Response'
          description: Reorder the knowledgebase positions
        rearrangeKnowledgebaseCategoryPositions_:
          $ref: '#/components/schemas/Response'
          description: Reorder the knowledgebase category positions
        rearrangeKnowledgebaseArticlePositions_:
          $ref: '#/components/schemas/Response'
          description: Reorder the knowledgebase article positions
        createKnowledgeBaseCategory_:
          $ref: '#/components/schemas/Response'
          description: Creates a knowledgebase category
        updateKnowledgeBaseCategory_:
          $ref: '#/components/schemas/Response'
          description: Updates a knowledgebase category
        scheduleKnowledgebaseCategoryDelete_:
          $ref: '#/components/schemas/Response'
          description: Schedules a category for deletion
        scheduleKnowledgeBaseCategoryUpdate_:
          $ref: '#/components/schemas/Response'
          description: Schedules a category for update
        archiveKnowledgeBaseCategory_:
          $ref: '#/components/schemas/Response'
          description: Archives a category with its subcategories and translations
        unarchiveKnowledgeBaseCategory_:
          $ref: '#/components/schemas/Response'
          description: Reinstates a category with its subcategories and translations
        removeScheduleForKnowledgebaseCategory_:
          $ref: '#/components/schemas/Response'
          description: >-
            Removes a category from being scheduled for deletion, update or
            publication
        createKnowledgeBaseArticle_:
          $ref: '#/components/schemas/Response'
          description: Creates a knowledgebase article
        updateKnowledgeBaseArticle_:
          $ref: '#/components/schemas/Response'
          description: Updates a knowledgebase article
        archiveKnowledgeBaseArticle_:
          $ref: '#/components/schemas/Response'
          description: Archives an article with its translations
        unarchiveKnowledgeBaseArticle_:
          $ref: '#/components/schemas/Response'
          description: Reinstates an article with its translations
        scheduleKnowledgeBaseArticleUpdate_:
          $ref: '#/components/schemas/Response'
          description: Schedules an article for update
        scheduleKnowledgebaseArticleDelete_:
          $ref: '#/components/schemas/Response'
          description: Schedules an article for deletion
        removeScheduleForKnowledgeBaseArticle_:
          $ref: '#/components/schemas/Response'
          description: Removes the schedule for an article either update or delete
        deleteIcon_:
          $ref: '#/components/schemas/Response'
          description: Deletes an uploaded icon
      description: Root Mutation
    ActivityStreamsConnection:
      type: object
      required:
        - nodes
        - edges
        - pageInfo
        - totalCount
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStream'
          description: A list of `ActivityStream` objects.
        edges:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStreamsEdge'
          description: >-
            A list of edges which contains the `ActivityStream` and cursor to
            aid in pagination.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: Information to aid in pagination.
        totalCount:
          type: integer
          format: int32
          description: >-
            The count of *all* `ActivityStream` you could get from the
            connection.
      description: A connection to a list of `ActivityStream` values.
    ActivityStream:
      type: object
      required:
        - nodeId
        - id
        - createdAt
      properties:
        nodeId:
          type: string
          description: >-
            A globally unique identifier. Can be used in various places
            throughout the system to identify this single value.
        id:
          type: integer
          format: int32
        activityName:
          type: string
        metadata:
          type: object
        createdAt:
          type: object
        activityType:
          type: string
    ActivityStreamsEdge:
      type: object
      properties:
        cursor:
          type: object
          description: A cursor for use in pagination.
        node:
          $ref: '#/components/schemas/ActivityStream'
          description: The `ActivityStream` at the end of the edge.
      description: A `ActivityStream` edge in the connection.
    PageInfo:
      type: object
      required:
        - hasNextPage
        - hasPreviousPage
      properties:
        hasNextPage:
          type: boolean
          description: When paginating forwards, are there more items?
        hasPreviousPage:
          type: boolean
          description: When paginating backwards, are there more items?
        startCursor:
          type: object
          description: When paginating backwards, the cursor to continue.
        endCursor:
          type: object
          description: When paginating forwards, the cursor to continue.
      description: Information about pagination in a connection.
    ActivityStreamCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Checks for equality with the object’s `id` field.
        activityName:
          type: string
          description: Checks for equality with the object’s `activityName` field.
        metadata:
          type: object
          description: Checks for equality with the object’s `metadata` field.
        createdAt:
          type: object
          description: Checks for equality with the object’s `createdAt` field.
        activityType:
          type: string
          description: Checks for equality with the object’s `activityType` field.
      description: >-
        A condition to be used against `ActivityStream` object types. All fields
        are

        tested for equality and combined with a logical ‘and.’
    KnowledgeBaseArticleDelayedJobsConnection:
      type: object
      required:
        - nodes
        - edges
        - pageInfo
        - totalCount
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJob'
          description: A list of `KnowledgeBaseArticleDelayedJob` objects.
        edges:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJobsEdge'
          description: >-
            A list of edges which contains the `KnowledgeBaseArticleDelayedJob`
            and cursor to aid in pagination.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: Information to aid in pagination.
        totalCount:
          type: integer
          format: int32
          description: >-
            The count of *all* `KnowledgeBaseArticleDelayedJob` you could get
            from the connection.
      description: A connection to a list of `KnowledgeBaseArticleDelayedJob` values.
    KnowledgeBaseArticleDelayedJob:
      type: object
      required:
        - nodeId
        - id
        - knowledgeBaseId
        - knowledgeBaseArticleId
        - knowledgeBaseArticleTranslationId
        - runAt
        - createdAt
      properties:
        nodeId:
          type: string
          description: >-
            A globally unique identifier. Can be used in various places
            throughout the system to identify this single value.
        id:
          type: integer
          format: int32
        knowledgeBaseId:
          type: integer
          format: int32
        knowledgeBaseArticleId:
          type: integer
          format: int32
        knowledgeBaseArticleTranslationId:
          type: integer
          format: int32
        runAt:
          type: object
        createdAt:
          type: object
        publishUpdateDelete:
          type: string
    KnowledgeBaseArticleDelayedJobsEdge:
      type: object
      properties:
        cursor:
          type: object
          description: A cursor for use in pagination.
        node:
          $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJob'
          description: The `KnowledgeBaseArticleDelayedJob` at the end of the edge.
      description: A `KnowledgeBaseArticleDelayedJob` edge in the connection.
    KnowledgeBaseArticleDelayedJobCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Checks for equality with the object’s `id` field.
        knowledgeBaseId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `knowledgeBaseId` field.
        knowledgeBaseArticleId:
          type: integer
          format: int32
          description: >-
            Checks for equality with the object’s `knowledgeBaseArticleId`
            field.
        knowledgeBaseArticleTranslationId:
          type: integer
          format: int32
          description: >-
            Checks for equality with the object’s
            `knowledgeBaseArticleTranslationId` field.
        runAt:
          type: object
          description: Checks for equality with the object’s `runAt` field.
        createdAt:
          type: object
          description: Checks for equality with the object’s `createdAt` field.
        publishUpdateDelete:
          type: string
          description: Checks for equality with the object’s `publishUpdateDelete` field.
      description: >-
        A condition to be used against `KnowledgeBaseArticleDelayedJob` object
        types.

        All fields are tested for equality and combined with a logical ‘and.’
    KnowledgeBaseArticleTranslationsConnection:
      type: object
      required:
        - nodes
        - edges
        - pageInfo
        - totalCount
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseArticleTranslation'
          description: A list of `KnowledgeBaseArticleTranslation` objects.
        edges:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseArticleTranslationsEdge'
          description: >-
            A list of edges which contains the `KnowledgeBaseArticleTranslation`
            and cursor to aid in pagination.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: Information to aid in pagination.
        totalCount:
          type: integer
          format: int32
          description: >-
            The count of *all* `KnowledgeBaseArticleTranslation` you could get
            from the connection.
      description: A connection to a list of `KnowledgeBaseArticleTranslation` values.
    KnowledgeBaseArticleTranslation:
      type: object
      required:
        - nodeId
        - id
        - createdAt
        - updatedAt
        - publishNow
        - isArchived
        - uiColor
      properties:
        nodeId:
          type: string
          description: >-
            A globally unique identifier. Can be used in various places
            throughout the system to identify this single value.
        id:
          type: integer
          format: int32
        title:
          type: string
        kbLocaleId:
          type: integer
          format: int32
        createdAt:
          type: object
        updatedAt:
          type: object
        body:
          type: string
        keywords:
          type: string
        titleTag:
          type: string
        metaDescription:
          type: string
        articleId:
          type: integer
          format: int32
        active:
          type: boolean
        publishNow:
          type: boolean
        updateMetadata:
          type: string
        isDeleteScheduled:
          type: boolean
        isUpdateScheduled:
          type: boolean
        knowledgeBaseId:
          type: integer
          format: int32
        isArchived:
          type: boolean
        categoryId:
          type: integer
          format: int32
        uiColor:
          type: string
        listName:
          type: string
        position:
          type: integer
          format: int32
        listId:
          type: integer
          format: int32
    KnowledgeBaseArticleTranslationsEdge:
      type: object
      properties:
        cursor:
          type: object
          description: A cursor for use in pagination.
        node:
          $ref: '#/components/schemas/KnowledgeBaseArticleTranslation'
          description: The `KnowledgeBaseArticleTranslation` at the end of the edge.
      description: A `KnowledgeBaseArticleTranslation` edge in the connection.
    KnowledgeBaseArticleTranslationCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Checks for equality with the object’s `id` field.
        title:
          type: string
          description: Checks for equality with the object’s `title` field.
        kbLocaleId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `kbLocaleId` field.
        createdAt:
          type: object
          description: Checks for equality with the object’s `createdAt` field.
        updatedAt:
          type: object
          description: Checks for equality with the object’s `updatedAt` field.
        body:
          type: string
          description: Checks for equality with the object’s `body` field.
        keywords:
          type: string
          description: Checks for equality with the object’s `keywords` field.
        titleTag:
          type: string
          description: Checks for equality with the object’s `titleTag` field.
        metaDescription:
          type: string
          description: Checks for equality with the object’s `metaDescription` field.
        articleId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `articleId` field.
        active:
          type: boolean
          description: Checks for equality with the object’s `active` field.
        publishNow:
          type: boolean
          description: Checks for equality with the object’s `publishNow` field.
        updateMetadata:
          type: string
          description: Checks for equality with the object’s `updateMetadata` field.
        isDeleteScheduled:
          type: boolean
          description: Checks for equality with the object’s `isDeleteScheduled` field.
        isUpdateScheduled:
          type: boolean
          description: Checks for equality with the object’s `isUpdateScheduled` field.
        knowledgeBaseId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `knowledgeBaseId` field.
        isArchived:
          type: boolean
          description: Checks for equality with the object’s `isArchived` field.
        categoryId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `categoryId` field.
        uiColor:
          type: string
          description: Checks for equality with the object’s `uiColor` field.
        listName:
          type: string
          description: Checks for equality with the object’s `listName` field.
        position:
          type: integer
          format: int32
          description: Checks for equality with the object’s `position` field.
        listId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `listId` field.
      description: >-
        A condition to be used against `KnowledgeBaseArticleTranslation` object
        types.

        All fields are tested for equality and combined with a logical ‘and.’
    KnowledgeBaseArticlesConnection:
      type: object
      required:
        - nodes
        - edges
        - pageInfo
        - totalCount
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseArticle'
          description: A list of `KnowledgeBaseArticle` objects.
        edges:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseArticlesEdge'
          description: >-
            A list of edges which contains the `KnowledgeBaseArticle` and cursor
            to aid in pagination.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: Information to aid in pagination.
        totalCount:
          type: integer
          format: int32
          description: >-
            The count of *all* `KnowledgeBaseArticle` you could get from the
            connection.
      description: A connection to a list of `KnowledgeBaseArticle` values.
    KnowledgeBaseArticle:
      type: object
      required:
        - nodeId
        - id
        - categoryId
        - position
        - createdAt
        - isArchived
      properties:
        nodeId:
          type: string
          description: >-
            A globally unique identifier. Can be used in various places
            throughout the system to identify this single value.
        id:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        position:
          type: integer
          format: int32
        updatedAt:
          type: object
        createdAt:
          type: object
        knowledgeBaseId:
          type: integer
          format: int32
        isArchived:
          type: boolean
    KnowledgeBaseArticlesEdge:
      type: object
      properties:
        cursor:
          type: object
          description: A cursor for use in pagination.
        node:
          $ref: '#/components/schemas/KnowledgeBaseArticle'
          description: The `KnowledgeBaseArticle` at the end of the edge.
      description: A `KnowledgeBaseArticle` edge in the connection.
    KnowledgeBaseArticleCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Checks for equality with the object’s `id` field.
        categoryId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `categoryId` field.
        position:
          type: integer
          format: int32
          description: Checks for equality with the object’s `position` field.
        updatedAt:
          type: object
          description: Checks for equality with the object’s `updatedAt` field.
        createdAt:
          type: object
          description: Checks for equality with the object’s `createdAt` field.
        knowledgeBaseId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `knowledgeBaseId` field.
        isArchived:
          type: boolean
          description: Checks for equality with the object’s `isArchived` field.
      description: >-
        A condition to be used against `KnowledgeBaseArticle` object types. All
        fields

        are tested for equality and combined with a logical ‘and.’
    KnowledgeBaseCategoriesConnection:
      type: object
      required:
        - nodes
        - edges
        - pageInfo
        - totalCount
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseCategory'
          description: A list of `KnowledgeBaseCategory` objects.
        edges:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseCategoriesEdge'
          description: >-
            A list of edges which contains the `KnowledgeBaseCategory` and
            cursor to aid in pagination.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: Information to aid in pagination.
        totalCount:
          type: integer
          format: int32
          description: >-
            The count of *all* `KnowledgeBaseCategory` you could get from the
            connection.
      description: A connection to a list of `KnowledgeBaseCategory` values.
    KnowledgeBaseCategory:
      type: object
      required:
        - nodeId
        - id
        - knowledgeBaseId
        - position
        - createdAt
        - updatedAt
        - isArchived
      properties:
        nodeId:
          type: string
          description: >-
            A globally unique identifier. Can be used in various places
            throughout the system to identify this single value.
        id:
          type: integer
          format: int32
        knowledgeBaseId:
          type: integer
          format: int32
        parentId:
          type: integer
          format: int32
        position:
          type: integer
          format: int32
        createdAt:
          type: object
        updatedAt:
          type: object
        isArchived:
          type: boolean
    KnowledgeBaseCategoriesEdge:
      type: object
      properties:
        cursor:
          type: object
          description: A cursor for use in pagination.
        node:
          $ref: '#/components/schemas/KnowledgeBaseCategory'
          description: The `KnowledgeBaseCategory` at the end of the edge.
      description: A `KnowledgeBaseCategory` edge in the connection.
    KnowledgeBaseCategoryCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Checks for equality with the object’s `id` field.
        knowledgeBaseId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `knowledgeBaseId` field.
        parentId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `parentId` field.
        position:
          type: integer
          format: int32
          description: Checks for equality with the object’s `position` field.
        createdAt:
          type: object
          description: Checks for equality with the object’s `createdAt` field.
        updatedAt:
          type: object
          description: Checks for equality with the object’s `updatedAt` field.
        isArchived:
          type: boolean
          description: Checks for equality with the object’s `isArchived` field.
      description: >-
        A condition to be used against `KnowledgeBaseCategory` object types. All
        fields

        are tested for equality and combined with a logical ‘and.’
    KnowledgeBaseCategoryDelayedJobsConnection:
      type: object
      required:
        - nodes
        - edges
        - pageInfo
        - totalCount
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJob'
          description: A list of `KnowledgeBaseCategoryDelayedJob` objects.
        edges:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJobsEdge'
          description: >-
            A list of edges which contains the `KnowledgeBaseCategoryDelayedJob`
            and cursor to aid in pagination.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: Information to aid in pagination.
        totalCount:
          type: integer
          format: int32
          description: >-
            The count of *all* `KnowledgeBaseCategoryDelayedJob` you could get
            from the connection.
      description: A connection to a list of `KnowledgeBaseCategoryDelayedJob` values.
    KnowledgeBaseCategoryDelayedJob:
      type: object
      required:
        - nodeId
        - id
        - knowledgeBaseCategoryTranslationId
        - runAt
        - createdAt
      properties:
        nodeId:
          type: string
          description: >-
            A globally unique identifier. Can be used in various places
            throughout the system to identify this single value.
        id:
          type: integer
          format: int32
        knowledgeBaseCategoryTranslationId:
          type: integer
          format: int32
        runAt:
          type: object
        createdAt:
          type: object
        knowledgeBaseId:
          type: integer
          format: int32
        publishUpdateDelete:
          type: string
    KnowledgeBaseCategoryDelayedJobsEdge:
      type: object
      properties:
        cursor:
          type: object
          description: A cursor for use in pagination.
        node:
          $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJob'
          description: The `KnowledgeBaseCategoryDelayedJob` at the end of the edge.
      description: A `KnowledgeBaseCategoryDelayedJob` edge in the connection.
    KnowledgeBaseCategoryDelayedJobCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Checks for equality with the object’s `id` field.
        knowledgeBaseCategoryTranslationId:
          type: integer
          format: int32
          description: >-
            Checks for equality with the object’s
            `knowledgeBaseCategoryTranslationId` field.
        runAt:
          type: object
          description: Checks for equality with the object’s `runAt` field.
        createdAt:
          type: object
          description: Checks for equality with the object’s `createdAt` field.
        knowledgeBaseId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `knowledgeBaseId` field.
        publishUpdateDelete:
          type: string
          description: Checks for equality with the object’s `publishUpdateDelete` field.
      description: >-
        A condition to be used against `KnowledgeBaseCategoryDelayedJob` object
        types.

        All fields are tested for equality and combined with a logical ‘and.’
    KnowledgeBaseCategoryTranslationsConnection:
      type: object
      required:
        - nodes
        - edges
        - pageInfo
        - totalCount
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseCategoryTranslation'
          description: A list of `KnowledgeBaseCategoryTranslation` objects.
        edges:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseCategoryTranslationsEdge'
          description: >-
            A list of edges which contains the
            `KnowledgeBaseCategoryTranslation` and cursor to aid in pagination.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: Information to aid in pagination.
        totalCount:
          type: integer
          format: int32
          description: >-
            The count of *all* `KnowledgeBaseCategoryTranslation` you could get
            from the connection.
      description: A connection to a list of `KnowledgeBaseCategoryTranslation` values.
    KnowledgeBaseCategoryTranslation:
      type: object
      required:
        - nodeId
        - id
        - name
        - kbLocaleId
        - categoryId
        - createdAt
        - updatedAt
        - isDeleteScheduled
        - isUpdateScheduled
        - isArchived
      properties:
        nodeId:
          type: string
          description: >-
            A globally unique identifier. Can be used in various places
            throughout the system to identify this single value.
        id:
          type: integer
          format: int32
        name:
          type: string
        kbLocaleId:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        createdAt:
          type: object
        updatedAt:
          type: object
        uiColor:
          type: string
        categoryIcon:
          type: string
        titleTag:
          type: string
        footer:
          type: string
        keywords:
          type: string
        metaDescription:
          type: string
        publishNow:
          type: boolean
        active:
          type: boolean
        permission:
          type: string
        updateMetadata:
          type: string
        isDeleteScheduled:
          type: boolean
        isUpdateScheduled:
          type: boolean
        knowledgeBaseId:
          type: integer
          format: int32
        isArchived:
          type: boolean
        listId:
          type: integer
          format: int32
    KnowledgeBaseCategoryTranslationsEdge:
      type: object
      properties:
        cursor:
          type: object
          description: A cursor for use in pagination.
        node:
          $ref: '#/components/schemas/KnowledgeBaseCategoryTranslation'
          description: The `KnowledgeBaseCategoryTranslation` at the end of the edge.
      description: A `KnowledgeBaseCategoryTranslation` edge in the connection.
    KnowledgeBaseCategoryTranslationCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Checks for equality with the object’s `id` field.
        name:
          type: string
          description: Checks for equality with the object’s `name` field.
        kbLocaleId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `kbLocaleId` field.
        categoryId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `categoryId` field.
        createdAt:
          type: object
          description: Checks for equality with the object’s `createdAt` field.
        updatedAt:
          type: object
          description: Checks for equality with the object’s `updatedAt` field.
        uiColor:
          type: string
          description: Checks for equality with the object’s `uiColor` field.
        categoryIcon:
          type: string
          description: Checks for equality with the object’s `categoryIcon` field.
        titleTag:
          type: string
          description: Checks for equality with the object’s `titleTag` field.
        footer:
          type: string
          description: Checks for equality with the object’s `footer` field.
        keywords:
          type: string
          description: Checks for equality with the object’s `keywords` field.
        metaDescription:
          type: string
          description: Checks for equality with the object’s `metaDescription` field.
        publishNow:
          type: boolean
          description: Checks for equality with the object’s `publishNow` field.
        active:
          type: boolean
          description: Checks for equality with the object’s `active` field.
        permission:
          type: string
          description: Checks for equality with the object’s `permission` field.
        updateMetadata:
          type: string
          description: Checks for equality with the object’s `updateMetadata` field.
        isDeleteScheduled:
          type: boolean
          description: Checks for equality with the object’s `isDeleteScheduled` field.
        isUpdateScheduled:
          type: boolean
          description: Checks for equality with the object’s `isUpdateScheduled` field.
        knowledgeBaseId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `knowledgeBaseId` field.
        isArchived:
          type: boolean
          description: Checks for equality with the object’s `isArchived` field.
        listId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `listId` field.
      description: >-
        A condition to be used against `KnowledgeBaseCategoryTranslation` object
        types.

        All fields are tested for equality and combined with a logical ‘and.’
    KnowledgeBaseListsConnection:
      type: object
      required:
        - nodes
        - edges
        - pageInfo
        - totalCount
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseList'
          description: A list of `KnowledgeBaseList` objects.
        edges:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseListsEdge'
          description: >-
            A list of edges which contains the `KnowledgeBaseList` and cursor to
            aid in pagination.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: Information to aid in pagination.
        totalCount:
          type: integer
          format: int32
          description: >-
            The count of *all* `KnowledgeBaseList` you could get from the
            connection.
      description: A connection to a list of `KnowledgeBaseList` values.
    KnowledgeBaseList:
      type: object
      required:
        - nodeId
        - id
        - knowledgeBaseId
        - listType
        - title
        - position
        - createdAt
      properties:
        nodeId:
          type: string
          description: >-
            A globally unique identifier. Can be used in various places
            throughout the system to identify this single value.
        id:
          type: integer
          format: int32
        knowledgeBaseId:
          type: integer
          format: int32
        listType:
          type: string
        title:
          type: string
        position:
          type: integer
          format: int32
        createdAt:
          type: object
    KnowledgeBaseListsEdge:
      type: object
      properties:
        cursor:
          type: object
          description: A cursor for use in pagination.
        node:
          $ref: '#/components/schemas/KnowledgeBaseList'
          description: The `KnowledgeBaseList` at the end of the edge.
      description: A `KnowledgeBaseList` edge in the connection.
    KnowledgeBaseListCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Checks for equality with the object’s `id` field.
        knowledgeBaseId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `knowledgeBaseId` field.
        listType:
          type: string
          description: Checks for equality with the object’s `listType` field.
        title:
          type: string
          description: Checks for equality with the object’s `title` field.
        position:
          type: integer
          format: int32
          description: Checks for equality with the object’s `position` field.
        createdAt:
          type: object
          description: Checks for equality with the object’s `createdAt` field.
      description: >-
        A condition to be used against `KnowledgeBaseList` object types. All
        fields are

        tested for equality and combined with a logical ‘and.’
    KnowledgeBaseTranslationsConnection:
      type: object
      required:
        - nodes
        - edges
        - pageInfo
        - totalCount
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseTranslation'
          description: A list of `KnowledgeBaseTranslation` objects.
        edges:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseTranslationsEdge'
          description: >-
            A list of edges which contains the `KnowledgeBaseTranslation` and
            cursor to aid in pagination.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: Information to aid in pagination.
        totalCount:
          type: integer
          format: int32
          description: >-
            The count of *all* `KnowledgeBaseTranslation` you could get from the
            connection.
      description: A connection to a list of `KnowledgeBaseTranslation` values.
    KnowledgeBaseTranslation:
      type: object
      required:
        - nodeId
        - id
        - knowledgeBaseId
        - createdAt
        - updatedAt
        - isArchived
      properties:
        nodeId:
          type: string
          description: >-
            A globally unique identifier. Can be used in various places
            throughout the system to identify this single value.
        id:
          type: integer
          format: int32
        knowledgeBaseId:
          type: integer
          format: int32
        title:
          type: string
        createdAt:
          type: object
        updatedAt:
          type: object
        footerNote:
          type: string
        kbLocaleId:
          type: integer
          format: int32
        active:
          type: boolean
        position:
          type: integer
          format: int32
        uiColor:
          type: string
        isArchived:
          type: boolean
    KnowledgeBaseTranslationsEdge:
      type: object
      properties:
        cursor:
          type: object
          description: A cursor for use in pagination.
        node:
          $ref: '#/components/schemas/KnowledgeBaseTranslation'
          description: The `KnowledgeBaseTranslation` at the end of the edge.
      description: A `KnowledgeBaseTranslation` edge in the connection.
    KnowledgeBaseTranslationCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Checks for equality with the object’s `id` field.
        knowledgeBaseId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `knowledgeBaseId` field.
        title:
          type: string
          description: Checks for equality with the object’s `title` field.
        createdAt:
          type: object
          description: Checks for equality with the object’s `createdAt` field.
        updatedAt:
          type: object
          description: Checks for equality with the object’s `updatedAt` field.
        footerNote:
          type: string
          description: Checks for equality with the object’s `footerNote` field.
        kbLocaleId:
          type: integer
          format: int32
          description: Checks for equality with the object’s `kbLocaleId` field.
        active:
          type: boolean
          description: Checks for equality with the object’s `active` field.
        position:
          type: integer
          format: int32
          description: Checks for equality with the object’s `position` field.
        uiColor:
          type: string
          description: Checks for equality with the object’s `uiColor` field.
        isArchived:
          type: boolean
          description: Checks for equality with the object’s `isArchived` field.
      description: >-
        A condition to be used against `KnowledgeBaseTranslation` object types.
        All

        fields are tested for equality and combined with a logical ‘and.’
    KnowledgeBasesConnection:
      type: object
      required:
        - nodes
        - edges
        - pageInfo
        - totalCount
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBasis'
          description: A list of `KnowledgeBasis` objects.
        edges:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBasesEdge'
          description: >-
            A list of edges which contains the `KnowledgeBasis` and cursor to
            aid in pagination.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: Information to aid in pagination.
        totalCount:
          type: integer
          format: int32
          description: >-
            The count of *all* `KnowledgeBasis` you could get from the
            connection.
      description: A connection to a list of `KnowledgeBasis` values.
    KnowledgeBasis:
      type: object
      required:
        - nodeId
        - id
        - name
        - position
        - isArchived
      properties:
        nodeId:
          type: string
          description: >-
            A globally unique identifier. Can be used in various places
            throughout the system to identify this single value.
        id:
          type: integer
          format: int32
        name:
          type: string
        icon:
          type: string
        footer:
          type: string
        createdAt:
          type: object
        homepageLayout:
          type: string
        categoryLayout:
          type: string
        active:
          type: boolean
        updatedAt:
          type: object
        frontPage:
          type: string
        position:
          type: integer
          format: int32
        uiColor:
          type: string
        isArchived:
          type: boolean
    KnowledgeBasesEdge:
      type: object
      properties:
        cursor:
          type: object
          description: A cursor for use in pagination.
        node:
          $ref: '#/components/schemas/KnowledgeBasis'
          description: The `KnowledgeBasis` at the end of the edge.
      description: A `KnowledgeBasis` edge in the connection.
    KnowledgeBasisCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Checks for equality with the object’s `id` field.
        name:
          type: string
          description: Checks for equality with the object’s `name` field.
        icon:
          type: string
          description: Checks for equality with the object’s `icon` field.
        footer:
          type: string
          description: Checks for equality with the object’s `footer` field.
        createdAt:
          type: object
          description: Checks for equality with the object’s `createdAt` field.
        homepageLayout:
          type: string
          description: Checks for equality with the object’s `homepageLayout` field.
        categoryLayout:
          type: string
          description: Checks for equality with the object’s `categoryLayout` field.
        active:
          type: boolean
          description: Checks for equality with the object’s `active` field.
        updatedAt:
          type: object
          description: Checks for equality with the object’s `updatedAt` field.
        frontPage:
          type: string
          description: Checks for equality with the object’s `frontPage` field.
        position:
          type: integer
          format: int32
          description: Checks for equality with the object’s `position` field.
        uiColor:
          type: string
          description: Checks for equality with the object’s `uiColor` field.
        isArchived:
          type: boolean
          description: Checks for equality with the object’s `isArchived` field.
      description: >-
        A condition to be used against `KnowledgeBasis` object types. All fields
        are

        tested for equality and combined with a logical ‘and.’
    LocalesConnection:
      type: object
      required:
        - nodes
        - edges
        - pageInfo
        - totalCount
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/Locale'
          description: A list of `Locale` objects.
        edges:
          type: array
          items:
            $ref: '#/components/schemas/LocalesEdge'
          description: >-
            A list of edges which contains the `Locale` and cursor to aid in
            pagination.
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
          description: Information to aid in pagination.
        totalCount:
          type: integer
          format: int32
          description: The count of *all* `Locale` you could get from the connection.
      description: A connection to a list of `Locale` values.
    Locale:
      type: object
      required:
        - nodeId
        - id
        - locale
        - name
        - dir
        - active
        - createdAt
        - updatedAt
      properties:
        nodeId:
          type: string
          description: >-
            A globally unique identifier. Can be used in various places
            throughout the system to identify this single value.
        id:
          type: integer
          format: int32
        locale:
          type: string
        alias:
          type: string
        name:
          type: string
        dir:
          type: string
        active:
          type: boolean
        createdAt:
          type: object
        updatedAt:
          type: object
    LocalesEdge:
      type: object
      properties:
        cursor:
          type: object
          description: A cursor for use in pagination.
        node:
          $ref: '#/components/schemas/Locale'
          description: The `Locale` at the end of the edge.
      description: A `Locale` edge in the connection.
    LocaleCondition:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Checks for equality with the object’s `id` field.
        locale:
          type: string
          description: Checks for equality with the object’s `locale` field.
        alias:
          type: string
          description: Checks for equality with the object’s `alias` field.
        name:
          type: string
          description: Checks for equality with the object’s `name` field.
        dir:
          type: string
          description: Checks for equality with the object’s `dir` field.
        active:
          type: boolean
          description: Checks for equality with the object’s `active` field.
        createdAt:
          type: object
          description: Checks for equality with the object’s `createdAt` field.
        updatedAt:
          type: object
          description: Checks for equality with the object’s `updatedAt` field.
      description: >-
        A condition to be used against `Locale` object types. All fields are
        tested for equality and combined with a logical ‘and.’
    CreateActivityStreamPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        activityStream:
          $ref: '#/components/schemas/ActivityStream'
          description: The `ActivityStream` that was created by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        activityStreamEdge:
          $ref: '#/components/schemas/ActivityStreamsEdge'
          description: An edge for our `ActivityStream`. May be used by Relay 1.
      description: The output of our create `ActivityStream` mutation.
    CreateActivityStreamInput:
      type: object
      required:
        - activityStream
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        activityStream:
          type: object
          description: The `ActivityStream` to be created by this mutation.
      description: All input for the create `ActivityStream` mutation.
    ActivityStreamInput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        activityName:
          type: string
        metadata:
          type: object
        createdAt:
          type: object
        activityType:
          type: string
      description: An input for mutations affecting `ActivityStream`
    CreateKnowledgeBaseArticleDelayedJobPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseArticleDelayedJob:
          $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJob'
          description: >-
            The `KnowledgeBaseArticleDelayedJob` that was created by this
            mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseArticleDelayedJobEdge:
          $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJobsEdge'
          description: >-
            An edge for our `KnowledgeBaseArticleDelayedJob`. May be used by
            Relay 1.
      description: The output of our create `KnowledgeBaseArticleDelayedJob` mutation.
    CreateKnowledgeBaseArticleDelayedJobInput:
      type: object
      required:
        - knowledgeBaseArticleDelayedJob
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseArticleDelayedJob:
          type: object
          description: The `KnowledgeBaseArticleDelayedJob` to be created by this mutation.
      description: All input for the create `KnowledgeBaseArticleDelayedJob` mutation.
    KnowledgeBaseArticleDelayedJobInput:
      type: object
      required:
        - knowledgeBaseId
        - knowledgeBaseArticleId
        - knowledgeBaseArticleTranslationId
        - runAt
      properties:
        id:
          type: integer
          format: int32
        knowledgeBaseId:
          type: integer
          format: int32
        knowledgeBaseArticleId:
          type: integer
          format: int32
        knowledgeBaseArticleTranslationId:
          type: integer
          format: int32
        runAt:
          type: object
        createdAt:
          type: object
        publishUpdateDelete:
          type: string
      description: An input for mutations affecting `KnowledgeBaseArticleDelayedJob`
    CreateKnowledgeBaseArticleTranslationPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseArticleTranslation:
          $ref: '#/components/schemas/KnowledgeBaseArticleTranslation'
          description: >-
            The `KnowledgeBaseArticleTranslation` that was created by this
            mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseArticleTranslationEdge:
          $ref: '#/components/schemas/KnowledgeBaseArticleTranslationsEdge'
          description: >-
            An edge for our `KnowledgeBaseArticleTranslation`. May be used by
            Relay 1.
      description: The output of our create `KnowledgeBaseArticleTranslation` mutation.
    CreateKnowledgeBaseArticleTranslationInput:
      type: object
      required:
        - knowledgeBaseArticleTranslation
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseArticleTranslation:
          type: object
          description: >-
            The `KnowledgeBaseArticleTranslation` to be created by this
            mutation.
      description: All input for the create `KnowledgeBaseArticleTranslation` mutation.
    KnowledgeBaseArticleTranslationInput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        kbLocaleId:
          type: integer
          format: int32
        createdAt:
          type: object
        updatedAt:
          type: object
        body:
          type: string
        keywords:
          type: string
        titleTag:
          type: string
        metaDescription:
          type: string
        articleId:
          type: integer
          format: int32
        active:
          type: boolean
        publishNow:
          type: boolean
        updateMetadata:
          type: string
        isDeleteScheduled:
          type: boolean
        isUpdateScheduled:
          type: boolean
        knowledgeBaseId:
          type: integer
          format: int32
        isArchived:
          type: boolean
        categoryId:
          type: integer
          format: int32
        uiColor:
          type: string
        listName:
          type: string
        position:
          type: integer
          format: int32
        listId:
          type: integer
          format: int32
      description: An input for mutations affecting `KnowledgeBaseArticleTranslation`
    CreateKnowledgeBaseArticlePayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseArticle:
          $ref: '#/components/schemas/KnowledgeBaseArticle'
          description: The `KnowledgeBaseArticle` that was created by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseArticleEdge:
          $ref: '#/components/schemas/KnowledgeBaseArticlesEdge'
          description: An edge for our `KnowledgeBaseArticle`. May be used by Relay 1.
      description: The output of our create `KnowledgeBaseArticle` mutation.
    CreateKnowledgeBaseArticleInput:
      type: object
      required:
        - knowledgeBaseArticle
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseArticle:
          type: object
          description: The `KnowledgeBaseArticle` to be created by this mutation.
      description: All input for the create `KnowledgeBaseArticle` mutation.
    KnowledgeBaseArticleInput:
      type: object
      required:
        - categoryId
        - position
      properties:
        id:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        position:
          type: integer
          format: int32
        updatedAt:
          type: object
        createdAt:
          type: object
        knowledgeBaseId:
          type: integer
          format: int32
        isArchived:
          type: boolean
      description: An input for mutations affecting `KnowledgeBaseArticle`
    CreateKnowledgeBaseCategoryPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseCategory:
          $ref: '#/components/schemas/KnowledgeBaseCategory'
          description: The `KnowledgeBaseCategory` that was created by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseCategoryEdge:
          $ref: '#/components/schemas/KnowledgeBaseCategoriesEdge'
          description: An edge for our `KnowledgeBaseCategory`. May be used by Relay 1.
      description: The output of our create `KnowledgeBaseCategory` mutation.
    CreateKnowledgeBaseCategoryInput:
      type: object
      required:
        - knowledgeBaseCategory
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseCategory:
          type: object
          description: The `KnowledgeBaseCategory` to be created by this mutation.
      description: All input for the create `KnowledgeBaseCategory` mutation.
    KnowledgeBaseCategoryInput:
      type: object
      required:
        - knowledgeBaseId
        - position
      properties:
        id:
          type: integer
          format: int32
        knowledgeBaseId:
          type: integer
          format: int32
        parentId:
          type: integer
          format: int32
        position:
          type: integer
          format: int32
        createdAt:
          type: object
        updatedAt:
          type: object
        isArchived:
          type: boolean
      description: An input for mutations affecting `KnowledgeBaseCategory`
    CreateKnowledgeBaseCategoryDelayedJobPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseCategoryDelayedJob:
          $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJob'
          description: >-
            The `KnowledgeBaseCategoryDelayedJob` that was created by this
            mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseCategoryDelayedJobEdge:
          $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJobsEdge'
          description: >-
            An edge for our `KnowledgeBaseCategoryDelayedJob`. May be used by
            Relay 1.
      description: The output of our create `KnowledgeBaseCategoryDelayedJob` mutation.
    CreateKnowledgeBaseCategoryDelayedJobInput:
      type: object
      required:
        - knowledgeBaseCategoryDelayedJob
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseCategoryDelayedJob:
          type: object
          description: >-
            The `KnowledgeBaseCategoryDelayedJob` to be created by this
            mutation.
      description: All input for the create `KnowledgeBaseCategoryDelayedJob` mutation.
    KnowledgeBaseCategoryDelayedJobInput:
      type: object
      required:
        - knowledgeBaseCategoryTranslationId
      properties:
        id:
          type: integer
          format: int32
        knowledgeBaseCategoryTranslationId:
          type: integer
          format: int32
        runAt:
          type: object
        createdAt:
          type: object
        knowledgeBaseId:
          type: integer
          format: int32
        publishUpdateDelete:
          type: string
      description: An input for mutations affecting `KnowledgeBaseCategoryDelayedJob`
    CreateKnowledgeBaseCategoryTranslationPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseCategoryTranslation:
          $ref: '#/components/schemas/KnowledgeBaseCategoryTranslation'
          description: >-
            The `KnowledgeBaseCategoryTranslation` that was created by this
            mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseCategoryTranslationEdge:
          $ref: '#/components/schemas/KnowledgeBaseCategoryTranslationsEdge'
          description: >-
            An edge for our `KnowledgeBaseCategoryTranslation`. May be used by
            Relay 1.
      description: The output of our create `KnowledgeBaseCategoryTranslation` mutation.
    CreateKnowledgeBaseCategoryTranslationInput:
      type: object
      required:
        - knowledgeBaseCategoryTranslation
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseCategoryTranslation:
          type: object
          description: >-
            The `KnowledgeBaseCategoryTranslation` to be created by this
            mutation.
      description: All input for the create `KnowledgeBaseCategoryTranslation` mutation.
    KnowledgeBaseCategoryTranslationInput:
      type: object
      required:
        - name
        - kbLocaleId
        - categoryId
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        kbLocaleId:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        createdAt:
          type: object
        updatedAt:
          type: object
        uiColor:
          type: string
        categoryIcon:
          type: string
        titleTag:
          type: string
        footer:
          type: string
        keywords:
          type: string
        metaDescription:
          type: string
        publishNow:
          type: boolean
        active:
          type: boolean
        permission:
          type: string
        updateMetadata:
          type: string
        isDeleteScheduled:
          type: boolean
        isUpdateScheduled:
          type: boolean
        knowledgeBaseId:
          type: integer
          format: int32
        isArchived:
          type: boolean
        listId:
          type: integer
          format: int32
      description: An input for mutations affecting `KnowledgeBaseCategoryTranslation`
    CreateKnowledgeBaseListPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseList:
          $ref: '#/components/schemas/KnowledgeBaseList'
          description: The `KnowledgeBaseList` that was created by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseListEdge:
          $ref: '#/components/schemas/KnowledgeBaseListsEdge'
          description: An edge for our `KnowledgeBaseList`. May be used by Relay 1.
      description: The output of our create `KnowledgeBaseList` mutation.
    CreateKnowledgeBaseListInput:
      type: object
      required:
        - knowledgeBaseList
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseList:
          type: object
          description: The `KnowledgeBaseList` to be created by this mutation.
      description: All input for the create `KnowledgeBaseList` mutation.
    KnowledgeBaseListInput:
      type: object
      required:
        - knowledgeBaseId
        - listType
        - title
        - position
      properties:
        id:
          type: integer
          format: int32
        knowledgeBaseId:
          type: integer
          format: int32
        listType:
          type: string
        title:
          type: string
        position:
          type: integer
          format: int32
        createdAt:
          type: object
      description: An input for mutations affecting `KnowledgeBaseList`
    CreateKnowledgeBaseTranslationPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseTranslation:
          $ref: '#/components/schemas/KnowledgeBaseTranslation'
          description: The `KnowledgeBaseTranslation` that was created by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseTranslationEdge:
          $ref: '#/components/schemas/KnowledgeBaseTranslationsEdge'
          description: An edge for our `KnowledgeBaseTranslation`. May be used by Relay 1.
      description: The output of our create `KnowledgeBaseTranslation` mutation.
    CreateKnowledgeBaseTranslationInput:
      type: object
      required:
        - knowledgeBaseTranslation
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseTranslation:
          type: object
          description: The `KnowledgeBaseTranslation` to be created by this mutation.
      description: All input for the create `KnowledgeBaseTranslation` mutation.
    KnowledgeBaseTranslationInput:
      type: object
      required:
        - knowledgeBaseId
      properties:
        id:
          type: integer
          format: int32
        knowledgeBaseId:
          type: integer
          format: int32
        title:
          type: string
        createdAt:
          type: object
        updatedAt:
          type: object
        footerNote:
          type: string
        kbLocaleId:
          type: integer
          format: int32
        active:
          type: boolean
        position:
          type: integer
          format: int32
        uiColor:
          type: string
        isArchived:
          type: boolean
      description: An input for mutations affecting `KnowledgeBaseTranslation`
    CreateKnowledgeBasisPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBasis:
          $ref: '#/components/schemas/KnowledgeBasis'
          description: The `KnowledgeBasis` that was created by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBasisEdge:
          $ref: '#/components/schemas/KnowledgeBasesEdge'
          description: An edge for our `KnowledgeBasis`. May be used by Relay 1.
      description: The output of our create `KnowledgeBasis` mutation.
    CreateKnowledgeBasisInput:
      type: object
      required:
        - knowledgeBasis
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBasis:
          type: object
          description: The `KnowledgeBasis` to be created by this mutation.
      description: All input for the create `KnowledgeBasis` mutation.
    KnowledgeBasisInput:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        icon:
          type: string
        footer:
          type: string
        createdAt:
          type: object
        homepageLayout:
          type: string
        categoryLayout:
          type: string
        active:
          type: boolean
        updatedAt:
          type: object
        frontPage:
          type: string
        position:
          type: integer
          format: int32
        uiColor:
          type: string
        isArchived:
          type: boolean
      description: An input for mutations affecting `KnowledgeBasis`
    CreateLocalePayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        locale:
          $ref: '#/components/schemas/Locale'
          description: The `Locale` that was created by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        localeEdge:
          $ref: '#/components/schemas/LocalesEdge'
          description: An edge for our `Locale`. May be used by Relay 1.
      description: The output of our create `Locale` mutation.
    CreateLocaleInput:
      type: object
      required:
        - locale
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        locale:
          type: object
          description: The `Locale` to be created by this mutation.
      description: All input for the create `Locale` mutation.
    LocaleInput:
      type: object
      required:
        - locale
        - name
      properties:
        id:
          type: integer
          format: int32
        locale:
          type: string
        alias:
          type: string
        name:
          type: string
        dir:
          type: string
        active:
          type: boolean
        createdAt:
          type: object
        updatedAt:
          type: object
      description: An input for mutations affecting `Locale`
    UpdateActivityStreamPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        activityStream:
          $ref: '#/components/schemas/ActivityStream'
          description: The `ActivityStream` that was updated by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        activityStreamEdge:
          $ref: '#/components/schemas/ActivityStreamsEdge'
          description: An edge for our `ActivityStream`. May be used by Relay 1.
      description: The output of our update `ActivityStream` mutation.
    UpdateActivityStreamInput:
      type: object
      required:
        - nodeId
        - activityStreamPatch
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `ActivityStream` to be updated.
        activityStreamPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the `ActivityStream`
            being updated.
      description: All input for the `updateActivityStream` mutation.
    ActivityStreamPatch:
      type: object
      properties:
        id:
          type: integer
          format: int32
        activityName:
          type: string
        metadata:
          type: object
        createdAt:
          type: object
        activityType:
          type: string
      description: >-
        Represents an update to a `ActivityStream`. Fields that are set will be
        updated.
    UpdateActivityStreamByIdInput:
      type: object
      required:
        - activityStreamPatch
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        activityStreamPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the `ActivityStream`
            being updated.
        id:
          type: integer
          format: int32
      description: All input for the `updateActivityStreamById` mutation.
    UpdateKnowledgeBaseArticleDelayedJobPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseArticleDelayedJob:
          $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJob'
          description: >-
            The `KnowledgeBaseArticleDelayedJob` that was updated by this
            mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseArticleDelayedJobEdge:
          $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJobsEdge'
          description: >-
            An edge for our `KnowledgeBaseArticleDelayedJob`. May be used by
            Relay 1.
      description: The output of our update `KnowledgeBaseArticleDelayedJob` mutation.
    UpdateKnowledgeBaseArticleDelayedJobInput:
      type: object
      required:
        - nodeId
        - knowledgeBaseArticleDelayedJobPatch
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseArticleDelayedJob` to be updated.
        knowledgeBaseArticleDelayedJobPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseArticleDelayedJob` being updated.
      description: All input for the `updateKnowledgeBaseArticleDelayedJob` mutation.
    KnowledgeBaseArticleDelayedJobPatch:
      type: object
      properties:
        id:
          type: integer
          format: int32
        knowledgeBaseId:
          type: integer
          format: int32
        knowledgeBaseArticleId:
          type: integer
          format: int32
        knowledgeBaseArticleTranslationId:
          type: integer
          format: int32
        runAt:
          type: object
        createdAt:
          type: object
        publishUpdateDelete:
          type: string
      description: >-
        Represents an update to a `KnowledgeBaseArticleDelayedJob`. Fields that
        are set will be updated.
    UpdateKnowledgeBaseArticleDelayedJobByIdInput:
      type: object
      required:
        - knowledgeBaseArticleDelayedJobPatch
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseArticleDelayedJobPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseArticleDelayedJob` being updated.
        id:
          type: integer
          format: int32
      description: All input for the `updateKnowledgeBaseArticleDelayedJobById` mutation.
    UpdateKnowledgeBaseArticleTranslationPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseArticleTranslation:
          $ref: '#/components/schemas/KnowledgeBaseArticleTranslation'
          description: >-
            The `KnowledgeBaseArticleTranslation` that was updated by this
            mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseArticleTranslationEdge:
          $ref: '#/components/schemas/KnowledgeBaseArticleTranslationsEdge'
          description: >-
            An edge for our `KnowledgeBaseArticleTranslation`. May be used by
            Relay 1.
      description: The output of our update `KnowledgeBaseArticleTranslation` mutation.
    UpdateKnowledgeBaseArticleTranslationInput:
      type: object
      required:
        - nodeId
        - knowledgeBaseArticleTranslationPatch
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseArticleTranslation` to be updated.
        knowledgeBaseArticleTranslationPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseArticleTranslation` being updated.
      description: All input for the `updateKnowledgeBaseArticleTranslation` mutation.
    KnowledgeBaseArticleTranslationPatch:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        kbLocaleId:
          type: integer
          format: int32
        createdAt:
          type: object
        updatedAt:
          type: object
        body:
          type: string
        keywords:
          type: string
        titleTag:
          type: string
        metaDescription:
          type: string
        articleId:
          type: integer
          format: int32
        active:
          type: boolean
        publishNow:
          type: boolean
        updateMetadata:
          type: string
        isDeleteScheduled:
          type: boolean
        isUpdateScheduled:
          type: boolean
        knowledgeBaseId:
          type: integer
          format: int32
        isArchived:
          type: boolean
        categoryId:
          type: integer
          format: int32
        uiColor:
          type: string
        listName:
          type: string
        position:
          type: integer
          format: int32
        listId:
          type: integer
          format: int32
      description: >-
        Represents an update to a `KnowledgeBaseArticleTranslation`. Fields that
        are set will be updated.
    UpdateKnowledgeBaseArticleTranslationByIdInput:
      type: object
      required:
        - knowledgeBaseArticleTranslationPatch
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseArticleTranslationPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseArticleTranslation` being updated.
        id:
          type: integer
          format: int32
      description: All input for the `updateKnowledgeBaseArticleTranslationById` mutation.
    UpdateKnowledgeBaseArticlePayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseArticle:
          $ref: '#/components/schemas/KnowledgeBaseArticle'
          description: The `KnowledgeBaseArticle` that was updated by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseArticleEdge:
          $ref: '#/components/schemas/KnowledgeBaseArticlesEdge'
          description: An edge for our `KnowledgeBaseArticle`. May be used by Relay 1.
      description: The output of our update `KnowledgeBaseArticle` mutation.
    UpdateKnowledgeBaseArticleInput:
      type: object
      required:
        - nodeId
        - knowledgeBaseArticlePatch
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseArticle` to be updated.
        knowledgeBaseArticlePatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseArticle` being updated.
      description: All input for the `updateKnowledgeBaseArticle` mutation.
    KnowledgeBaseArticlePatch:
      type: object
      properties:
        id:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        position:
          type: integer
          format: int32
        updatedAt:
          type: object
        createdAt:
          type: object
        knowledgeBaseId:
          type: integer
          format: int32
        isArchived:
          type: boolean
      description: >-
        Represents an update to a `KnowledgeBaseArticle`. Fields that are set
        will be updated.
    UpdateKnowledgeBaseArticleByIdInput:
      type: object
      required:
        - knowledgeBaseArticlePatch
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseArticlePatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseArticle` being updated.
        id:
          type: integer
          format: int32
      description: All input for the `updateKnowledgeBaseArticleById` mutation.
    UpdateKnowledgeBaseCategoryPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseCategory:
          $ref: '#/components/schemas/KnowledgeBaseCategory'
          description: The `KnowledgeBaseCategory` that was updated by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseCategoryEdge:
          $ref: '#/components/schemas/KnowledgeBaseCategoriesEdge'
          description: An edge for our `KnowledgeBaseCategory`. May be used by Relay 1.
      description: The output of our update `KnowledgeBaseCategory` mutation.
    UpdateKnowledgeBaseCategoryInput:
      type: object
      required:
        - nodeId
        - knowledgeBaseCategoryPatch
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseCategory` to be updated.
        knowledgeBaseCategoryPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseCategory` being updated.
      description: All input for the `updateKnowledgeBaseCategory` mutation.
    KnowledgeBaseCategoryPatch:
      type: object
      properties:
        id:
          type: integer
          format: int32
        knowledgeBaseId:
          type: integer
          format: int32
        parentId:
          type: integer
          format: int32
        position:
          type: integer
          format: int32
        createdAt:
          type: object
        updatedAt:
          type: object
        isArchived:
          type: boolean
      description: >-
        Represents an update to a `KnowledgeBaseCategory`. Fields that are set
        will be updated.
    UpdateKnowledgeBaseCategoryByIdInput:
      type: object
      required:
        - knowledgeBaseCategoryPatch
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseCategoryPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseCategory` being updated.
        id:
          type: integer
          format: int32
      description: All input for the `updateKnowledgeBaseCategoryById` mutation.
    UpdateKnowledgeBaseCategoryDelayedJobPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseCategoryDelayedJob:
          $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJob'
          description: >-
            The `KnowledgeBaseCategoryDelayedJob` that was updated by this
            mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseCategoryDelayedJobEdge:
          $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJobsEdge'
          description: >-
            An edge for our `KnowledgeBaseCategoryDelayedJob`. May be used by
            Relay 1.
      description: The output of our update `KnowledgeBaseCategoryDelayedJob` mutation.
    UpdateKnowledgeBaseCategoryDelayedJobInput:
      type: object
      required:
        - nodeId
        - knowledgeBaseCategoryDelayedJobPatch
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseCategoryDelayedJob` to be updated.
        knowledgeBaseCategoryDelayedJobPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseCategoryDelayedJob` being updated.
      description: All input for the `updateKnowledgeBaseCategoryDelayedJob` mutation.
    KnowledgeBaseCategoryDelayedJobPatch:
      type: object
      properties:
        id:
          type: integer
          format: int32
        knowledgeBaseCategoryTranslationId:
          type: integer
          format: int32
        runAt:
          type: object
        createdAt:
          type: object
        knowledgeBaseId:
          type: integer
          format: int32
        publishUpdateDelete:
          type: string
      description: >-
        Represents an update to a `KnowledgeBaseCategoryDelayedJob`. Fields that
        are set will be updated.
    UpdateKnowledgeBaseCategoryDelayedJobByIdInput:
      type: object
      required:
        - knowledgeBaseCategoryDelayedJobPatch
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseCategoryDelayedJobPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseCategoryDelayedJob` being updated.
        id:
          type: integer
          format: int32
      description: All input for the `updateKnowledgeBaseCategoryDelayedJobById` mutation.
    UpdateKnowledgeBaseCategoryTranslationPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseCategoryTranslation:
          $ref: '#/components/schemas/KnowledgeBaseCategoryTranslation'
          description: >-
            The `KnowledgeBaseCategoryTranslation` that was updated by this
            mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseCategoryTranslationEdge:
          $ref: '#/components/schemas/KnowledgeBaseCategoryTranslationsEdge'
          description: >-
            An edge for our `KnowledgeBaseCategoryTranslation`. May be used by
            Relay 1.
      description: The output of our update `KnowledgeBaseCategoryTranslation` mutation.
    UpdateKnowledgeBaseCategoryTranslationInput:
      type: object
      required:
        - nodeId
        - knowledgeBaseCategoryTranslationPatch
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseCategoryTranslation` to be updated.
        knowledgeBaseCategoryTranslationPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseCategoryTranslation` being updated.
      description: All input for the `updateKnowledgeBaseCategoryTranslation` mutation.
    KnowledgeBaseCategoryTranslationPatch:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        kbLocaleId:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        createdAt:
          type: object
        updatedAt:
          type: object
        uiColor:
          type: string
        categoryIcon:
          type: string
        titleTag:
          type: string
        footer:
          type: string
        keywords:
          type: string
        metaDescription:
          type: string
        publishNow:
          type: boolean
        active:
          type: boolean
        permission:
          type: string
        updateMetadata:
          type: string
        isDeleteScheduled:
          type: boolean
        isUpdateScheduled:
          type: boolean
        knowledgeBaseId:
          type: integer
          format: int32
        isArchived:
          type: boolean
        listId:
          type: integer
          format: int32
      description: >-
        Represents an update to a `KnowledgeBaseCategoryTranslation`. Fields
        that are set will be updated.
    UpdateKnowledgeBaseCategoryTranslationByIdInput:
      type: object
      required:
        - knowledgeBaseCategoryTranslationPatch
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseCategoryTranslationPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseCategoryTranslation` being updated.
        id:
          type: integer
          format: int32
      description: All input for the `updateKnowledgeBaseCategoryTranslationById` mutation.
    UpdateKnowledgeBaseListPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseList:
          $ref: '#/components/schemas/KnowledgeBaseList'
          description: The `KnowledgeBaseList` that was updated by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseListEdge:
          $ref: '#/components/schemas/KnowledgeBaseListsEdge'
          description: An edge for our `KnowledgeBaseList`. May be used by Relay 1.
      description: The output of our update `KnowledgeBaseList` mutation.
    UpdateKnowledgeBaseListInput:
      type: object
      required:
        - nodeId
        - knowledgeBaseListPatch
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseList` to be updated.
        knowledgeBaseListPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseList` being updated.
      description: All input for the `updateKnowledgeBaseList` mutation.
    KnowledgeBaseListPatch:
      type: object
      properties:
        id:
          type: integer
          format: int32
        knowledgeBaseId:
          type: integer
          format: int32
        listType:
          type: string
        title:
          type: string
        position:
          type: integer
          format: int32
        createdAt:
          type: object
      description: >-
        Represents an update to a `KnowledgeBaseList`. Fields that are set will
        be updated.
    UpdateKnowledgeBaseListByIdInput:
      type: object
      required:
        - knowledgeBaseListPatch
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseListPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseList` being updated.
        id:
          type: integer
          format: int32
      description: All input for the `updateKnowledgeBaseListById` mutation.
    UpdateKnowledgeBaseTranslationPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseTranslation:
          $ref: '#/components/schemas/KnowledgeBaseTranslation'
          description: The `KnowledgeBaseTranslation` that was updated by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseTranslationEdge:
          $ref: '#/components/schemas/KnowledgeBaseTranslationsEdge'
          description: An edge for our `KnowledgeBaseTranslation`. May be used by Relay 1.
      description: The output of our update `KnowledgeBaseTranslation` mutation.
    UpdateKnowledgeBaseTranslationInput:
      type: object
      required:
        - nodeId
        - knowledgeBaseTranslationPatch
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseTranslation` to be updated.
        knowledgeBaseTranslationPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseTranslation` being updated.
      description: All input for the `updateKnowledgeBaseTranslation` mutation.
    KnowledgeBaseTranslationPatch:
      type: object
      properties:
        id:
          type: integer
          format: int32
        knowledgeBaseId:
          type: integer
          format: int32
        title:
          type: string
        createdAt:
          type: object
        updatedAt:
          type: object
        footerNote:
          type: string
        kbLocaleId:
          type: integer
          format: int32
        active:
          type: boolean
        position:
          type: integer
          format: int32
        uiColor:
          type: string
        isArchived:
          type: boolean
      description: >-
        Represents an update to a `KnowledgeBaseTranslation`. Fields that are
        set will be updated.
    UpdateKnowledgeBaseTranslationByIdInput:
      type: object
      required:
        - knowledgeBaseTranslationPatch
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBaseTranslationPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the
            `KnowledgeBaseTranslation` being updated.
        id:
          type: integer
          format: int32
      description: All input for the `updateKnowledgeBaseTranslationById` mutation.
    UpdateKnowledgeBasisPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBasis:
          $ref: '#/components/schemas/KnowledgeBasis'
          description: The `KnowledgeBasis` that was updated by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBasisEdge:
          $ref: '#/components/schemas/KnowledgeBasesEdge'
          description: An edge for our `KnowledgeBasis`. May be used by Relay 1.
      description: The output of our update `KnowledgeBasis` mutation.
    UpdateKnowledgeBasisInput:
      type: object
      required:
        - nodeId
        - knowledgeBasisPatch
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBasis` to be updated.
        knowledgeBasisPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the `KnowledgeBasis`
            being updated.
      description: All input for the `updateKnowledgeBasis` mutation.
    KnowledgeBasisPatch:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        icon:
          type: string
        footer:
          type: string
        createdAt:
          type: object
        homepageLayout:
          type: string
        categoryLayout:
          type: string
        active:
          type: boolean
        updatedAt:
          type: object
        frontPage:
          type: string
        position:
          type: integer
          format: int32
        uiColor:
          type: string
        isArchived:
          type: boolean
      description: >-
        Represents an update to a `KnowledgeBasis`. Fields that are set will be
        updated.
    UpdateKnowledgeBasisByIdInput:
      type: object
      required:
        - knowledgeBasisPatch
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        knowledgeBasisPatch:
          type: object
          description: >-
            An object where the defined keys will be set on the `KnowledgeBasis`
            being updated.
        id:
          type: integer
          format: int32
      description: All input for the `updateKnowledgeBasisById` mutation.
    UpdateLocalePayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        locale:
          $ref: '#/components/schemas/Locale'
          description: The `Locale` that was updated by this mutation.
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        localeEdge:
          $ref: '#/components/schemas/LocalesEdge'
          description: An edge for our `Locale`. May be used by Relay 1.
      description: The output of our update `Locale` mutation.
    UpdateLocaleInput:
      type: object
      required:
        - nodeId
        - localePatch
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single `Locale` to be
            updated.
        localePatch:
          type: object
          description: >-
            An object where the defined keys will be set on the `Locale` being
            updated.
      description: All input for the `updateLocale` mutation.
    LocalePatch:
      type: object
      properties:
        id:
          type: integer
          format: int32
        locale:
          type: string
        alias:
          type: string
        name:
          type: string
        dir:
          type: string
        active:
          type: boolean
        createdAt:
          type: object
        updatedAt:
          type: object
      description: Represents an update to a `Locale`. Fields that are set will be updated.
    UpdateLocaleByIdInput:
      type: object
      required:
        - localePatch
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        localePatch:
          type: object
          description: >-
            An object where the defined keys will be set on the `Locale` being
            updated.
        id:
          type: integer
          format: int32
      description: All input for the `updateLocaleById` mutation.
    DeleteActivityStreamPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        activityStream:
          $ref: '#/components/schemas/ActivityStream'
          description: The `ActivityStream` that was deleted by this mutation.
        deletedActivityStreamId:
          type: string
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        activityStreamEdge:
          $ref: '#/components/schemas/ActivityStreamsEdge'
          description: An edge for our `ActivityStream`. May be used by Relay 1.
      description: The output of our delete `ActivityStream` mutation.
    DeleteActivityStreamInput:
      type: object
      required:
        - nodeId
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `ActivityStream` to be deleted.
      description: All input for the `deleteActivityStream` mutation.
    DeleteActivityStreamByIdInput:
      type: object
      required:
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        id:
          type: integer
          format: int32
      description: All input for the `deleteActivityStreamById` mutation.
    DeleteKnowledgeBaseArticleDelayedJobPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseArticleDelayedJob:
          $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJob'
          description: >-
            The `KnowledgeBaseArticleDelayedJob` that was deleted by this
            mutation.
        deletedKnowledgeBaseArticleDelayedJobId:
          type: string
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseArticleDelayedJobEdge:
          $ref: '#/components/schemas/KnowledgeBaseArticleDelayedJobsEdge'
          description: >-
            An edge for our `KnowledgeBaseArticleDelayedJob`. May be used by
            Relay 1.
      description: The output of our delete `KnowledgeBaseArticleDelayedJob` mutation.
    DeleteKnowledgeBaseArticleDelayedJobInput:
      type: object
      required:
        - nodeId
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseArticleDelayedJob` to be deleted.
      description: All input for the `deleteKnowledgeBaseArticleDelayedJob` mutation.
    DeleteKnowledgeBaseArticleDelayedJobByIdInput:
      type: object
      required:
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        id:
          type: integer
          format: int32
      description: All input for the `deleteKnowledgeBaseArticleDelayedJobById` mutation.
    DeleteKnowledgeBaseArticleTranslationPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseArticleTranslation:
          $ref: '#/components/schemas/KnowledgeBaseArticleTranslation'
          description: >-
            The `KnowledgeBaseArticleTranslation` that was deleted by this
            mutation.
        deletedKnowledgeBaseArticleTranslationId:
          type: string
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseArticleTranslationEdge:
          $ref: '#/components/schemas/KnowledgeBaseArticleTranslationsEdge'
          description: >-
            An edge for our `KnowledgeBaseArticleTranslation`. May be used by
            Relay 1.
      description: The output of our delete `KnowledgeBaseArticleTranslation` mutation.
    DeleteKnowledgeBaseArticleTranslationInput:
      type: object
      required:
        - nodeId
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseArticleTranslation` to be deleted.
      description: All input for the `deleteKnowledgeBaseArticleTranslation` mutation.
    DeleteKnowledgeBaseArticleTranslationByIdInput:
      type: object
      required:
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        id:
          type: integer
          format: int32
      description: All input for the `deleteKnowledgeBaseArticleTranslationById` mutation.
    DeleteKnowledgeBaseArticlePayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseArticle:
          $ref: '#/components/schemas/KnowledgeBaseArticle'
          description: The `KnowledgeBaseArticle` that was deleted by this mutation.
        deletedKnowledgeBaseArticleId:
          type: string
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseArticleEdge:
          $ref: '#/components/schemas/KnowledgeBaseArticlesEdge'
          description: An edge for our `KnowledgeBaseArticle`. May be used by Relay 1.
      description: The output of our delete `KnowledgeBaseArticle` mutation.
    DeleteKnowledgeBaseArticleInput:
      type: object
      required:
        - nodeId
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseArticle` to be deleted.
      description: All input for the `deleteKnowledgeBaseArticle` mutation.
    DeleteKnowledgeBaseArticleByIdInput:
      type: object
      required:
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        id:
          type: integer
          format: int32
      description: All input for the `deleteKnowledgeBaseArticleById` mutation.
    DeleteKnowledgeBaseCategoryPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseCategory:
          $ref: '#/components/schemas/KnowledgeBaseCategory'
          description: The `KnowledgeBaseCategory` that was deleted by this mutation.
        deletedKnowledgeBaseCategoryId:
          type: string
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseCategoryEdge:
          $ref: '#/components/schemas/KnowledgeBaseCategoriesEdge'
          description: An edge for our `KnowledgeBaseCategory`. May be used by Relay 1.
      description: The output of our delete `KnowledgeBaseCategory` mutation.
    DeleteKnowledgeBaseCategoryInput:
      type: object
      required:
        - nodeId
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseCategory` to be deleted.
      description: All input for the `deleteKnowledgeBaseCategory` mutation.
    DeleteKnowledgeBaseCategoryByIdInput:
      type: object
      required:
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        id:
          type: integer
          format: int32
      description: All input for the `deleteKnowledgeBaseCategoryById` mutation.
    DeleteKnowledgeBaseCategoryDelayedJobPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseCategoryDelayedJob:
          $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJob'
          description: >-
            The `KnowledgeBaseCategoryDelayedJob` that was deleted by this
            mutation.
        deletedKnowledgeBaseCategoryDelayedJobId:
          type: string
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseCategoryDelayedJobEdge:
          $ref: '#/components/schemas/KnowledgeBaseCategoryDelayedJobsEdge'
          description: >-
            An edge for our `KnowledgeBaseCategoryDelayedJob`. May be used by
            Relay 1.
      description: The output of our delete `KnowledgeBaseCategoryDelayedJob` mutation.
    DeleteKnowledgeBaseCategoryDelayedJobInput:
      type: object
      required:
        - nodeId
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseCategoryDelayedJob` to be deleted.
      description: All input for the `deleteKnowledgeBaseCategoryDelayedJob` mutation.
    DeleteKnowledgeBaseCategoryDelayedJobByIdInput:
      type: object
      required:
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        id:
          type: integer
          format: int32
      description: All input for the `deleteKnowledgeBaseCategoryDelayedJobById` mutation.
    DeleteKnowledgeBaseCategoryTranslationPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseCategoryTranslation:
          $ref: '#/components/schemas/KnowledgeBaseCategoryTranslation'
          description: >-
            The `KnowledgeBaseCategoryTranslation` that was deleted by this
            mutation.
        deletedKnowledgeBaseCategoryTranslationId:
          type: string
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseCategoryTranslationEdge:
          $ref: '#/components/schemas/KnowledgeBaseCategoryTranslationsEdge'
          description: >-
            An edge for our `KnowledgeBaseCategoryTranslation`. May be used by
            Relay 1.
      description: The output of our delete `KnowledgeBaseCategoryTranslation` mutation.
    DeleteKnowledgeBaseCategoryTranslationInput:
      type: object
      required:
        - nodeId
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseCategoryTranslation` to be deleted.
      description: All input for the `deleteKnowledgeBaseCategoryTranslation` mutation.
    DeleteKnowledgeBaseCategoryTranslationByIdInput:
      type: object
      required:
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        id:
          type: integer
          format: int32
      description: All input for the `deleteKnowledgeBaseCategoryTranslationById` mutation.
    DeleteKnowledgeBaseListPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseList:
          $ref: '#/components/schemas/KnowledgeBaseList'
          description: The `KnowledgeBaseList` that was deleted by this mutation.
        deletedKnowledgeBaseListId:
          type: string
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseListEdge:
          $ref: '#/components/schemas/KnowledgeBaseListsEdge'
          description: An edge for our `KnowledgeBaseList`. May be used by Relay 1.
      description: The output of our delete `KnowledgeBaseList` mutation.
    DeleteKnowledgeBaseListInput:
      type: object
      required:
        - nodeId
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseList` to be deleted.
      description: All input for the `deleteKnowledgeBaseList` mutation.
    DeleteKnowledgeBaseListByIdInput:
      type: object
      required:
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        id:
          type: integer
          format: int32
      description: All input for the `deleteKnowledgeBaseListById` mutation.
    DeleteKnowledgeBaseTranslationPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBaseTranslation:
          $ref: '#/components/schemas/KnowledgeBaseTranslation'
          description: The `KnowledgeBaseTranslation` that was deleted by this mutation.
        deletedKnowledgeBaseTranslationId:
          type: string
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBaseTranslationEdge:
          $ref: '#/components/schemas/KnowledgeBaseTranslationsEdge'
          description: An edge for our `KnowledgeBaseTranslation`. May be used by Relay 1.
      description: The output of our delete `KnowledgeBaseTranslation` mutation.
    DeleteKnowledgeBaseTranslationInput:
      type: object
      required:
        - nodeId
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBaseTranslation` to be deleted.
      description: All input for the `deleteKnowledgeBaseTranslation` mutation.
    DeleteKnowledgeBaseTranslationByIdInput:
      type: object
      required:
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        id:
          type: integer
          format: int32
      description: All input for the `deleteKnowledgeBaseTranslationById` mutation.
    DeleteKnowledgeBasisPayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        knowledgeBasis:
          $ref: '#/components/schemas/KnowledgeBasis'
          description: The `KnowledgeBasis` that was deleted by this mutation.
        deletedKnowledgeBasisId:
          type: string
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        knowledgeBasisEdge:
          $ref: '#/components/schemas/KnowledgeBasesEdge'
          description: An edge for our `KnowledgeBasis`. May be used by Relay 1.
      description: The output of our delete `KnowledgeBasis` mutation.
    DeleteKnowledgeBasisInput:
      type: object
      required:
        - nodeId
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single
            `KnowledgeBasis` to be deleted.
      description: All input for the `deleteKnowledgeBasis` mutation.
    DeleteKnowledgeBasisByIdInput:
      type: object
      required:
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        id:
          type: integer
          format: int32
      description: All input for the `deleteKnowledgeBasisById` mutation.
    DeleteLocalePayload:
      type: object
      properties:
        clientMutationId:
          type: string
          description: >-
            The exact same `clientMutationId` that was provided in the mutation
            input,

            unchanged and unused. May be used by a client to track mutations.
        locale:
          $ref: '#/components/schemas/Locale'
          description: The `Locale` that was deleted by this mutation.
        deletedLocaleId:
          type: string
        query:
          $ref: '#/components/schemas/Query'
          description: >-
            Our root query field type. Allows us to run any query from our
            mutation payload.
        localeEdge:
          $ref: '#/components/schemas/LocalesEdge'
          description: An edge for our `Locale`. May be used by Relay 1.
      description: The output of our delete `Locale` mutation.
    DeleteLocaleInput:
      type: object
      required:
        - nodeId
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        nodeId:
          type: string
          description: >-
            The globally unique `ID` which will identify a single `Locale` to be
            deleted.
      description: All input for the `deleteLocale` mutation.
    DeleteLocaleByIdInput:
      type: object
      required:
        - id
      properties:
        clientMutationId:
          type: string
          description: >-
            An arbitrary string value with no semantic meaning. Will be included
            in the

            payload verbatim. May be used to track mutations by the client.
        id:
          type: integer
          format: int32
      description: All input for the `deleteLocaleById` mutation.
    KnowledgeBaseHybridStatType:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Knowledgebase'
        stat:
          $ref: '#/components/schemas/KnowledgeBaseCategoryStatType'
      description: >-
        This returns an object of the knowledge base, knowledge base and stat
        type
    Knowledgebase:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        icon:
          type: string
        footer:
          type: string
        created_at:
          type: string
        homepage_layout:
          type: string
        category_layout:
          type: string
        active:
          type: boolean
        updated_at:
          type: string
        front_page:
          type: string
        position:
          type: integer
          format: int32
        ui_color:
          type: string
        tooltip:
          type: string
        is_archived:
          type: boolean
      description: >-
        Knowledgebases are used to store categories, subcategories and articles,
        seperated by levels with the max level at 5
    KnowledgeBaseCategoryStatType:
      type: object
      required:
        - level
        - num_categories
        - num_articles
      properties:
        level:
          type: integer
          format: int32
        num_categories:
          type: integer
          format: int32
        num_articles:
          type: integer
          format: int32
      description: This returns an object that provides the stats for a category
    KnowledgebaseTranslationType:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        knowledge_base_id:
          type: string
        title:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        footer_note:
          type: string
        kb_locale_id:
          type: string
        active:
          type: boolean
        position:
          type: integer
          format: int32
        ui_color:
          type: string
        tooltip:
          type: string
        is_archived:
          type: boolean
      description: This holds the translations for a knowledge base
    KnowledgeBaseLocales:
      type: object
      properties:
        id:
          type: string
        locale:
          type: string
        name:
          type: string
      description: A locale
    KnowledgebaseTranslationStatusColor:
      type: object
      required:
        - kb_locale_id
        - knowledge_base_translation_id
      properties:
        kb_locale_id:
          type: string
        knowledge_base_translation_id:
          type: string
        ui_color:
          type: string
        tooltip:
          type: string
        title:
          type: string
        default:
          type: boolean
      description: >-
        This holds the status color for the translations of a knowledge base
        category
    StatusMessageForKnowledgeBaseCategoryScheduleType:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        data:
          $ref: '#/components/schemas/KnowledgeBaseCategoryScheduleType'
      description: A status message container for the KnowledgBaseCategoryScheduleType
    KnowledgeBaseCategoryScheduleType:
      type: object
      required:
        - id
        - knowledge_base_category_translation_id
        - knowledge_base_id
      properties:
        id:
          type: string
        knowledge_base_category_translation_id:
          type: string
        run_at:
          type: string
        created_at:
          type: string
        knowledge_base_id:
          type: string
        publish_update_delete:
          type: string
      description: >-
        This returns an object that will provides information about the time a
        category will be published, updated or deleted
    KnowledgeBaseCategoryHybridStatType:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/KnowledgeBaseCategoryHybridType'
        stat:
          $ref: '#/components/schemas/KnowledgeBaseCategoryStatType'
      description: >-
        This returns an object of the knowledge base category, knowledge base
        category translation and stat type
    KnowledgeBaseCategoryHybridType:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/KnowledgeBaseCategoryInfoType'
        knowledge_base_category:
          $ref: '#/components/schemas/KnowledgeBaseCategoryType'
        knowledge_base_category_translation:
          $ref: '#/components/schemas/KnowledgeBaseCategoryTranslationType'
      description: >-
        This returns an object of the knowledge base category and knowledge base
        category translation type
    KnowledgeBaseCategoryInfoType:
      type: object
      properties:
        parent_name:
          type: string
      description: This returns an object of the knowledge base info type
    KnowledgeBaseCategoryType:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        knowledge_base_id:
          type: string
        parent_id:
          type: string
        position:
          type: integer
          format: int32
        created_at:
          type: string
        updated_at:
          type: string
        is_archived:
          type: boolean
      description: This returns an object of the knowledge base category type
    KnowledgeBaseCategoryTranslationType:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        name:
          type: string
        kb_locale_id:
          type: string
        category_id:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        ui_color:
          type: string
        category_icon:
          type: string
        title_tag:
          type: string
        footer:
          type: string
        keywords:
          type: string
        meta_description:
          type: string
        publish_now:
          type: boolean
        active:
          type: boolean
        permission:
          type: string
        update_metadata:
          type: string
        is_delete_scheduled:
          type: boolean
        is_update_scheduled:
          type: boolean
        knowledge_base_id:
          type: string
        is_archived:
          type: boolean
        list_id:
          type: string
      description: This returns an object of the knowledge base category translation type
    KnowledgeBaseArticleType:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        knowledge_base_id:
          type: string
        category_id:
          type: string
        article_id:
          type: string
        kb_locale_id:
          type: string
        title:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        body:
          type: string
        keywords:
          type: string
        title_tag:
          type: string
        meta_description:
          type: string
        update_metadata:
          type: string
        active:
          type: boolean
        publish_now:
          type: boolean
        is_archived:
          type: boolean
        is_delete_scheduled:
          type: boolean
        is_update_scheduled:
          type: boolean
        ui_color:
          type: string
        list_id:
          type: integer
          format: int32
        position:
          type: integer
          format: int32
      description: This returns an object of the knowledge base article type
    KnowledgeBaseArticleDelayedJobType:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        knowledge_base_id:
          type: string
        knowledge_base_article_id:
          type: string
        knowledge_base_article_translation_id:
          type: string
        run_at:
          type: string
        created_at:
          type: string
        publish_update_delete:
          type: string
      description: This is used to return a schedule for an article
    KnowledgeBaseListType:
      type: object
      required:
        - id
        - knowledge_base_id
      properties:
        id:
          type: string
        knowledge_base_id:
          type: string
        list_type:
          type: string
        title:
          type: string
        position:
          type: integer
          format: int32
        created_at:
          type: string
      description: This is used to return a list for the knowledge base
    KnowledgeBaseLevelStatusHybridType:
      type: object
      properties:
        categories:
          $ref: '#/components/schemas/KnowledgeBaseLevelStatusType'
        articles:
          $ref: '#/components/schemas/KnowledgeBaseLevelStatusType'
      description: An object that describes the status of categories and articles
    KnowledgeBaseLevelStatusType:
      type: object
      properties:
        count:
          type: integer
          format: int32
        no_action:
          $ref: '#/components/schemas/KnowledgeBaseLevelStatusDataType'
        draft:
          $ref: '#/components/schemas/KnowledgeBaseLevelStatusDataType'
        scheduled_to_publish:
          $ref: '#/components/schemas/KnowledgeBaseLevelStatusDataType'
        published:
          $ref: '#/components/schemas/KnowledgeBaseLevelStatusDataType'
        scheduled_to_update:
          $ref: '#/components/schemas/KnowledgeBaseLevelStatusDataType'
        scheduled_to_archive:
          $ref: '#/components/schemas/KnowledgeBaseLevelStatusDataType'
        archived:
          $ref: '#/components/schemas/KnowledgeBaseLevelStatusDataType'
      description: An object that describes the status of a single category or article
    KnowledgeBaseLevelStatusDataType:
      type: object
      properties:
        tooltip:
          type: string
        color:
          type: string
        count:
          type: integer
          format: int32
      description: An object that describes the status of a single category or article
    KnowledgeBaseCategoryLevelType:
      type: object
      properties:
        level:
          type: integer
          format: int32
        depth:
          type: integer
          format: int32
        max_level:
          type: integer
          format: int32
      description: Returns the level and depth of a knowledge base category
    ExportKnowledgeBaseType:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        link:
          type: string
      description: This is used to return the link for the exported knowledgebase
    Response:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      description: An object which is used to return status messages for static responses
    KnowledgebaseCreateLocale:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        default:
          type: boolean
      description: An object which is used when creating a knowledge base
    KnowledgeBaseCategoryTranslationTypeInput:
      type: object
      properties:
        knowledge_base_id:
          type: string
        parent_id:
          type: string
        category_id:
          type: string
        kb_locale_id:
          type: string
        category_icon:
          type: string
        position:
          type: integer
          format: int32
        created_at:
          type: string
        updated_at:
          type: string
        schedule_at:
          type: string
        publish_now:
          type: boolean
        name:
          type: string
        title_tag:
          type: string
        footer:
          type: string
        keywords:
          type: string
        meta_description:
          type: string
        permission:
          type: string
        active:
          type: boolean
        list_id:
          type: string
      description: This is used to schedule a category for update
    KnowledgeBaseArticleTranslationTypeInput:
      type: object
      properties:
        knowledge_base_id:
          type: string
        category_id:
          type: string
        article_id:
          type: string
        kb_locale_id:
          type: string
        title:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        body:
          type: string
        keywords:
          type: string
        title_tag:
          type: string
        meta_description:
          type: string
        update_metadata:
          type: string
        active:
          type: boolean
        publish_now:
          type: boolean
        list_id:
          type: integer
          format: int32
        position:
          type: integer
          format: int32
      description: This is used to schedule an article for update
