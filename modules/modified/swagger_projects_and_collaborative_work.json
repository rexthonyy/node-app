{"swagger":"2.0","host":"88.208.212.245","basePath":"/api/index.php","produces":["application/json","application/xml"],"consumes":["application/json","application/xml","multipart/form-data"],"paths":{"/agendaevents/{id}":{"get":{"operationId":"retrieveAgendaevents","tags":["agendaevents"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"ID of Agenda Events","in":"path","required":true}],"summary":"Get properties of a Agenda Events object ??","description":"Return an array with Agenda Events informations","responses":{"200":{"description":"Success","schema":{"type":"string"}},"500":{"description":"RestException"}},"security":[{"api_key":[]}]},"put":{"operationId":"updateAgendaevents","tags":["agendaevents"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"Id of Agenda Event to update","in":"path","required":true},{"name":"updateAgendaeventsModel","description":"request_data  \n","in":"body","required":false,"schema":{"$ref":"#/definitions/updateAgendaeventsModel"}}],"summary":"Update Agenda Event general fields ??","description":"","responses":{"200":{"description":"Success","schema":{"type":"integer","format":"int64"}}},"security":[{"api_key":[]}]},"delete":{"operationId":"removeAgendaevents","tags":["agendaevents"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"Agenda Event ID","in":"path","required":true}],"summary":"Delete Agenda Event ??","description":"","responses":{"200":{"description":"Success","schema":{"type":"array","items":{"type":"string"}}}},"security":[{"api_key":[]}]},"from":["swagger_projects_and_collaborative_work.json"]},"/agendaevents":{"get":{"operationId":"listAgendaevents","tags":["agendaevents"],"parameters":[{"name":"sortfield","type":"string","defaultValue":"t.id","description":"Sort field","in":"query","required":false},{"name":"sortorder","type":"string","defaultValue":"ASC","description":"Sort order","in":"query","required":false},{"name":"limit","type":"integer","format":"int64","defaultValue":100,"description":"Limit for list","in":"query","required":false},{"name":"page","type":"integer","format":"int64","description":"Page number","in":"query","required":false},{"name":"user_ids","type":"string","description":"User ids filter field (owners of event). Example: '1' or '1,2,3'","in":"query","required":false},{"name":"sqlfilters","type":"string","description":"Other criteria to filter answers separated by a comma. Syntax example \"(t.label:like:'%dol%') and (t.datec:<:'20160101')\"","in":"query","required":false}],"summary":"List Agenda Events ??","description":"Get a list of Agenda Events","responses":{"200":{"description":"Success","schema":{"type":"array","items":{"type":"string"}}}},"security":[{"api_key":[]}]},"post":{"operationId":"createAgendaevents","tags":["agendaevents"],"parameters":[{"name":"createAgendaeventsModel","description":"request_data  \n","in":"body","required":false,"schema":{"$ref":"#/definitions/createAgendaeventsModel"}}],"summary":"Create Agenda Event object ??","description":"","responses":{"200":{"description":"Success","schema":{"type":"integer","format":"int64"}}},"security":[{"api_key":[]}]},"from":["swagger_projects_and_collaborative_work.json"]},"/projects/{id}":{"get":{"operationId":"retrieveProjects","tags":["projects"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"ID of project","in":"path","required":true}],"summary":"Get properties of a project object ??","description":"Return an array with project informations","responses":{"200":{"description":"Success","schema":{"type":"string"}},"500":{"description":"RestException"}},"security":[{"api_key":[]}]},"put":{"operationId":"updateProjects","tags":["projects"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"Id of project to update","in":"path","required":true},{"name":"updateProjectsModel","description":"request_data  \n","in":"body","required":false,"schema":{"$ref":"#/definitions/updateProjectsModel"}}],"summary":"Update project general fields (won't touch lines of project) ??","description":"","responses":{"200":{"description":"Success","schema":{"type":"integer","format":"int64"}}},"security":[{"api_key":[]}]},"delete":{"operationId":"removeProjects","tags":["projects"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"Project ID","in":"path","required":true}],"summary":"Delete project ??","description":"","responses":{"200":{"description":"Success","schema":{"type":"array","items":{"type":"string"}}}},"security":[{"api_key":[]}]},"from":["swagger_projects_and_collaborative_work.json"]},"/projects":{"get":{"operationId":"listProjects","tags":["projects"],"parameters":[{"name":"sortfield","type":"string","defaultValue":"t.rowid","description":"Sort field","in":"query","required":false},{"name":"sortorder","type":"string","defaultValue":"ASC","description":"Sort order","in":"query","required":false},{"name":"limit","type":"integer","format":"int64","defaultValue":100,"description":"Limit for list","in":"query","required":false},{"name":"page","type":"integer","format":"int64","description":"Page number","in":"query","required":false},{"name":"thirdparty_ids","type":"string","description":"Thirdparty ids to filter projects of (example '1' or '1,2,3')","in":"query","required":false},{"name":"category","type":"integer","format":"int64","description":"Use this param to filter list by category","in":"query","required":false},{"name":"sqlfilters","type":"string","description":"Other criteria to filter answers separated by a comma. Syntax example \"(t.ref:like:'SO-%') and (t.date_creation:<:'20160101')\"","in":"query","required":false}],"summary":"List projects ??","description":"Get a list of projects","responses":{"200":{"description":"Success","schema":{"type":"array","items":{"type":"string"}}}},"security":[{"api_key":[]}]},"post":{"operationId":"createProjects","tags":["projects"],"parameters":[{"name":"createProjectsModel","description":"request_data  \n","in":"body","required":false,"schema":{"$ref":"#/definitions/createProjectsModel"}}],"summary":"Create project object ??","description":"","responses":{"200":{"description":"Success","schema":{"type":"integer","format":"int64"}}},"security":[{"api_key":[]}]},"from":["swagger_projects_and_collaborative_work.json"]},"/projects/{id}/tasks":{"get":{"operationId":"projectsRetrieveLines","tags":["projects"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"Id of project","in":"path","required":true},{"name":"includetimespent","type":"integer","format":"int64","description":"0=Return only list of tasks. 1=Include a summary of time spent, 2=Include details of time spent lines (2 is no implemented yet)","in":"query","required":false}],"summary":"Get tasks of a project. ??","description":"See also API /tasks","responses":{"200":{"description":"Success","schema":{"type":"integer","format":"int64"}}},"security":[{"api_key":[]}]},"from":["swagger_projects_and_collaborative_work.json"]},"/projects/{id}/roles":{"get":{"operationId":"projectsRetrieveRoles","tags":["projects"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"Id of project","in":"path","required":true},{"name":"userid","type":"integer","format":"int64","description":"Id of user (0 = connected user)","in":"query","required":false}],"summary":"Get roles a user is assigned to a project with ??","description":"","responses":{"200":{"description":"Success","schema":{"type":"integer","format":"int64"}}},"security":[{"api_key":[]}]},"from":["swagger_projects_and_collaborative_work.json"]},"/projects/{id}/validate":{"post":{"operationId":"projectsValidate","tags":["projects"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"Project ID","in":"path","required":true},{"name":"projectsValidateModel","description":"notrigger  \n","in":"body","required":false,"schema":{"$ref":"#/definitions/projectsValidateModel"}}],"summary":"Validate a project. ??","description":"You can test this API with the following input message { \"notrigger\": 0 }","responses":{"200":{"description":"Success","schema":{"type":"array","items":{"type":"string"}}}},"security":[{"api_key":[]}]},"from":["swagger_projects_and_collaborative_work.json"]},"/tasks/{id}":{"get":{"operationId":"retrieveTasks","tags":["tasks"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"ID of task","in":"path","required":true},{"name":"includetimespent","type":"integer","format":"int64","description":"0=Return only task. 1=Include a summary of time spent, 2=Include details of time spent lines (2 is no implemented yet)","in":"query","required":false}],"summary":"Get properties of a task object ??","description":"Return an array with task informations","responses":{"200":{"description":"Success","schema":{"type":"string"}},"500":{"description":"RestException"}},"security":[{"api_key":[]}]},"put":{"operationId":"updateTasks","tags":["tasks"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"Id of task to update","in":"path","required":true},{"name":"updateTasksModel","description":"request_data  \n","in":"body","required":false,"schema":{"$ref":"#/definitions/updateTasksModel"}}],"summary":"Update task general fields (won't touch time spent of task) ??","description":"","responses":{"200":{"description":"Success","schema":{"type":"integer","format":"int64"}}},"security":[{"api_key":[]}]},"delete":{"operationId":"removeTasks","tags":["tasks"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"Task ID","in":"path","required":true}],"summary":"Delete task ??","description":"","responses":{"200":{"description":"Success","schema":{"type":"array","items":{"type":"string"}}}},"security":[{"api_key":[]}]},"from":["swagger_projects_and_collaborative_work.json"]},"/tasks":{"get":{"operationId":"listTasks","tags":["tasks"],"parameters":[{"name":"sortfield","type":"string","defaultValue":"t.rowid","description":"Sort field","in":"query","required":false},{"name":"sortorder","type":"string","defaultValue":"ASC","description":"Sort order","in":"query","required":false},{"name":"limit","type":"integer","format":"int64","defaultValue":100,"description":"Limit for list","in":"query","required":false},{"name":"page","type":"integer","format":"int64","description":"Page number","in":"query","required":false},{"name":"sqlfilters","type":"string","description":"Other criteria to filter answers separated by a comma. Syntax example \"(t.ref:like:'SO-%') and (t.date_creation:<:'20160101')\"","in":"query","required":false}],"summary":"List tasks ??","description":"Get a list of tasks","responses":{"200":{"description":"Success","schema":{"type":"array","items":{"type":"string"}}}},"security":[{"api_key":[]}]},"post":{"operationId":"createTasks","tags":["tasks"],"parameters":[{"name":"createTasksModel","description":"request_data  \n","in":"body","required":false,"schema":{"$ref":"#/definitions/createTasksModel"}}],"summary":"Create task object ??","description":"","responses":{"200":{"description":"Success","schema":{"type":"integer","format":"int64"}}},"security":[{"api_key":[]}]},"from":["swagger_projects_and_collaborative_work.json"]},"/tasks/{id}/roles":{"get":{"operationId":"tasksRetrieveRoles","tags":["tasks"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"Id of task","in":"path","required":true},{"name":"userid","type":"integer","format":"int64","description":"Id of user (0 = connected user)","in":"query","required":false}],"summary":"Get roles a user is assigned to a task with ??","description":"","responses":{"200":{"description":"Success","schema":{"type":"integer","format":"int64"}}},"security":[{"api_key":[]}]},"from":["swagger_projects_and_collaborative_work.json"]},"/tasks/{id}/addtimespent":{"post":{"operationId":"tasksAddTimeSpent","tags":["tasks"],"parameters":[{"name":"id","type":"integer","format":"int64","description":"Task ID","in":"path","required":true},{"name":"tasksAddTimeSpentModel","description":"**date** (required)  \n**duration** (required)  \nuser_id  \nnote  \n","in":"body","required":true,"schema":{"$ref":"#/definitions/tasksAddTimeSpentModel"}}],"summary":"Add time spent to a task of a project. ??","description":"You can test this API with the following input message { \"date\": \"2016-12-31 23:15:00\", \"duration\": 1800, \"user_id\": 1, \"note\": \"My time test\" }","responses":{"200":{"description":"Success","schema":{"type":"array","items":{"type":"string"}}}},"security":[{"api_key":[]}]},"from":["swagger_projects_and_collaborative_work.json"]}},"definitions":{"updateAgendaeventsModel":{"properties":{"request_data":{"type":"array","items":{"type":"string"},"description":"Datas"}},"from":["swagger_projects_and_collaborative_work.json"]},"createAgendaeventsModel":{"properties":{"request_data":{"type":"array","items":{"type":"string"},"description":"Request data"}},"from":["swagger_projects_and_collaborative_work.json"]},"updateProjectsModel":{"properties":{"request_data":{"type":"array","items":{"type":"string"},"description":"Datas"}},"from":["swagger_projects_and_collaborative_work.json"]},"createProjectsModel":{"properties":{"request_data":{"type":"array","items":{"type":"string"},"description":"Request data"}},"from":["swagger_projects_and_collaborative_work.json"]},"projectsValidateModel":{"properties":{"notrigger":{"type":"integer","format":"int64","description":"1=Does not execute triggers, 0= execute triggers"}},"from":["swagger_projects_and_collaborative_work.json"]},"updateTasksModel":{"properties":{"request_data":{"type":"array","items":{"type":"string"},"description":"Datas"}},"from":["swagger_projects_and_collaborative_work.json"]},"createTasksModel":{"properties":{"request_data":{"type":"array","items":{"type":"string"},"description":"Request data"}},"from":["swagger_projects_and_collaborative_work.json"]},"tasksAddTimeSpentModel":{"properties":{"date":{"type":"string","format":"date-time","description":"Date (YYYY-MM-DD HH:MI:SS in GMT)"},"duration":{"type":"integer","format":"int64","description":"Duration in seconds (3600 = 1h)"},"user_id":{"type":"integer","format":"int64","description":"User (Use 0 for connected user)"},"note":{"type":"string","description":"Note"}},"required":["date","duration"],"from":["swagger_projects_and_collaborative_work.json"]}},"securityDefinitions":{"api_key":{"type":"apiKey","name":"api_key","in":"query"}},"info":{"version":"1","title":"Restler API Explorer","description":"Live API Documentation","contact":{"name":"Restler Support","url":"luracast.com/products/restler","email":"arul@luracast.com"},"license":{"name":"LGPL-2.1","url":"https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html"}}}